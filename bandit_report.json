Run started:2024-12-22 16:50:31.390123

Test results:
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/apps/config.py:112
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
111	            app_module = import_module(entry)
112	        except Exception:
113	            pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/apps/config.py:163
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
162	                app_config_class = import_string(entry)
163	            except Exception:
164	                pass

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:161
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
160	    def errors(self):
161	        return mark_safe(
162	            "\n".join(
163	                self.form[f].errors.as_ul()
164	                for f in self.fields
165	                if f not in self.readonly_fields
166	            ).strip("\n")
167	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:161
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
160	    def errors(self):
161	        return mark_safe(
162	            "\n".join(
163	                self.form[f].errors.as_ul()
164	                for f in self.fields
165	                if f not in self.readonly_fields
166	            ).strip("\n")
167	        )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:191
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
190	        return self.field.label_tag(
191	            contents=mark_safe(contents),
192	            attrs=attrs,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:191
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
190	        return self.field.label_tag(
191	            contents=mark_safe(contents),
192	            attrs=attrs,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:197
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
196	    def errors(self):
197	        return mark_safe(self.field.errors.as_ul())
198	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/helpers.py:197
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
196	    def errors(self):
197	        return mark_safe(self.field.errors.as_ul())
198	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/options.py:381
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
380	        try:
381	            return mark_safe(self.empty_value_display)
382	        except AttributeError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/options.py:381
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
380	        try:
381	            return mark_safe(self.empty_value_display)
382	        except AttributeError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/options.py:383
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
382	        except AttributeError:
383	            return mark_safe(self.admin_site.empty_value_display)
384	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/options.py:383
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
382	        except AttributeError:
383	            return mark_safe(self.admin_site.empty_value_display)
384	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:50
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
49	            cl.get_query_string({PAGE_VAR: i}),
50	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ""),
51	            i,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:50
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
49	            cl.get_query_string({PAGE_VAR: i}),
50	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ""),
51	            i,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:103
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
102	                yield {
103	                    "text": mark_safe(
104	                        f'<input type="checkbox" id="action-toggle" '
105	                        f'aria-label="{aria_label}">'
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:103
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
102	                yield {
103	                    "text": mark_safe(
104	                        f'<input type="checkbox" id="action-toggle" '
105	                        f'aria-label="{aria_label}">'
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:107
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),
108	                    "sortable": False,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:248
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
247	                    row_classes.append("nowrap")
248	        row_class = mark_safe(' class="%s"' % " ".join(row_classes))
249	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:248
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
247	                    row_classes.append("nowrap")
248	        row_class = mark_safe(' class="%s"' % " ".join(row_classes))
249	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:298
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
297	                bf = form[field_name]
298	                result_repr = mark_safe(str(bf.errors) + str(bf))
299	            yield format_html("<td{}>{}</td>", row_class, result_repr)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:298
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
297	                bf = form[field_name]
298	                result_repr = mark_safe(str(bf.errors) + str(bf))
299	            yield format_html("<td{}>{}</td>", row_class, result_repr)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:329
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
328	            if form[cl.model._meta.pk.name].is_hidden:
329	                yield mark_safe(form[cl.model._meta.pk.name])
330	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admin/templatetags/admin_list.py:329
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
328	            if form[cl.model._meta.pk.name].is_hidden:
329	                yield mark_safe(form[cl.model._meta.pk.name])
330	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admindocs/utils.py:88
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
87	    )
88	    return mark_safe(parts["fragment"])
89	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admindocs/utils.py:88
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
87	    )
88	    return mark_safe(parts["fragment"])
89	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admindocs/utils.py:264
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
263	def strip_p_tags(value):
264	    return mark_safe(value.replace("<p>", "").replace("</p>", ""))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/admindocs/utils.py:264
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
263	def strip_p_tags(value):
264	    return mark_safe(value.replace("<p>", "").replace("</p>", ""))

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password2'
   Severity: Low   Confidence: Medium
   Location: ./django/django/contrib/auth/forms.py:157
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html
156	    @sensitive_variables("password")
157	    def validate_password_for_user(self, user, password_field_name="password2"):
158	        password = self.cleaned_data.get(password_field_name)
159	        if password:
160	            try:
161	                password_validation.validate_password(password, user)
162	            except ValidationError as error:
163	                self.add_error(password_field_name, error)
164	
165	    def set_password_and_save(self, user, password_field_name="password1", commit=True):
166	        user.set_password(self.cleaned_data[password_field_name])

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   Location: ./django/django/contrib/auth/forms.py:165
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html
164	
165	    def set_password_and_save(self, user, password_field_name="password1", commit=True):
166	        user.set_password(self.cleaned_data[password_field_name])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:333
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
332	        algorithm, iterations, salt, hash = encoded.split("$", 3)
333	        assert algorithm == self.algorithm
334	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:412
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
411	        algorithm, rest = encoded.split("$", 1)
412	        assert algorithm == self.algorithm
413	        params = argon2.extract_parameters("$" + rest)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:433
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
432	        algorithm, rest = encoded.split("$", 1)
433	        assert algorithm == self.algorithm
434	        try:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:514
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
513	        algorithm, empty, algostr, work_factor, data = encoded.split("$", 4)
514	        assert algorithm == self.algorithm
515	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:525
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
524	        algorithm, data = encoded.split("$", 1)
525	        assert algorithm == self.algorithm
526	        encoded_2 = self.encode(password, data.encode("ascii"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:603
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
602	        )
603	        assert algorithm == self.algorithm
604	        return {

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:658
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
657	        self._check_encode_args(password, salt)
658	        hash = hashlib.md5((salt + password).encode()).hexdigest()
659	        return "%s$%s$%s" % (self.algorithm, salt, hash)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/auth/hashers.py:663
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
662	        algorithm, salt, hash = encoded.split("$", 2)
663	        assert algorithm == self.algorithm
664	        return {

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/contrib/auth/management/commands/createsuperuser.py:188
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
187	                        self.stderr.write("\n".join(err.messages))
188	                        response = input(
189	                            "Bypass password validation and create user anyway? [y/N]: "
190	                        )

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/contrib/auth/management/commands/createsuperuser.py:261
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
260	        """
261	        raw_value = input(message)
262	        if default and raw_value == "":

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py:91
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
90	                    )
91	                    ok_to_delete = input("Type 'yes' to continue, or 'no' to cancel: ")
92	                else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/flatpages/views.py:67
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
66	    # content in the first place).
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/flatpages/views.py:67
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
66	    # content in the first place).
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/flatpages/views.py:68
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)
69	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/flatpages/views.py:68
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)
69	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/humanize/templatetags/humanize.py:63
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
62	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
63	    return mark_safe(value)
64	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/humanize/templatetags/humanize.py:63
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
62	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
63	    return mark_safe(value)
64	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/messages/storage/cookie.py:38
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/messages/storage/cookie.py:38
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/sessions/backends/base.py:139
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
138	            logger.warning("Session data corrupted")
139	        except Exception:
140	            # ValueError, unpickling exceptions. If any of these happen, just

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/contrib/staticfiles/management/commands/collectstatic.py:206
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
205	            )
206	            if input("".join(message)) != "yes":
207	                raise CommandError("Collecting static files cancelled.")

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/contrib/staticfiles/storage.py:130
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
129	            return None
130	        hasher = md5(usedforsecurity=False)
131	        for chunk in content.chunks():

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/contrib/staticfiles/storage.py:242
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
241	                # Otherwise the condition above would have returned prematurely.
242	                assert url_path.startswith(settings.STATIC_URL)
243	                target_name = url_path.removeprefix(settings.STATIC_URL)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/cache/backends/db.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
2	import base64
3	import pickle
4	from datetime import datetime, timezone

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/db.py:95
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
94	                value = connection.ops.process_clob(value)
95	                value = pickle.loads(base64.b64decode(value.encode()))
96	                result[key_map.get(key)] = value

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/cache/backends/filebased.py:4
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
3	import os
4	import pickle
5	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/filebased.py:36
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
35	                if not self._is_expired(f):
36	                    return pickle.loads(zlib.decompress(f.read()))
37	        except FileNotFoundError:

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/filebased.py:69
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
68	                    else:
69	                        previous_value = pickle.loads(zlib.decompress(f.read()))
70	                        f.seek(0)

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/filebased.py:135
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
134	                [
135	                    md5(key.encode(), usedforsecurity=False).hexdigest(),
136	                    self.cache_suffix,

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/filebased.py:153
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
152	        try:
153	            exp = pickle.load(f)
154	        except EOFError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/cache/backends/locmem.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	"Thread-safe in-memory cache backend."
2	import pickle
3	import time

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/locmem.py:42
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
41	            self._cache.move_to_end(key, last=False)
42	        return pickle.loads(pickled)
43	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/locmem.py:72
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
71	            pickled = self._cache[key]
72	            value = pickle.loads(pickled)
73	            new_value = value + delta

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/cache/backends/redis.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
2	
3	import pickle
4	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/backends/redis.py:27
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
26	        except ValueError:
27	            return pickle.loads(data)
28	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/core/cache/backends/redis.py:68
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
67	            return 0
68	        return random.randint(1, len(self._servers) - 1)
69	

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/cache/utils.py:7
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
6	def make_template_fragment_key(fragment_name, vary_on=None):
7	    hasher = md5(usedforsecurity=False)
8	    if vary_on is not None:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/core/handlers/asgi.py:239
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
238	        # This should never happen.
239	        assert False, "Invalid ASGI message after request body: %s" % message["type"]
240	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/management/commands/dbshell.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import subprocess
2	
3	from django.core.management.base import BaseCommand, CommandError
4	from django.db import DEFAULT_DB_ALIAS, connections

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/core/management/commands/flush.py:60
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
59	        if interactive:
60	            confirm = input(
61	                """You have requested a flush of the database.
62	This will IRREVERSIBLY DESTROY all data currently in the "%s" database,
63	and return each table to an empty state.
64	Are you sure you want to do this?
65	
66	    Type 'yes' to continue, or 'no' to cancel: """
67	                % connection.settings_dict["NAME"]
68	            )

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/management/commands/shell.py:78
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
77	                try:
78	                    exec(compile(pythonrc_code, pythonrc, "exec"), imported_objects)
79	                except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/management/commands/shell.py:117
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
116	        if options["command"]:
117	            exec(options["command"], globals())
118	            return

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/django/core/management/commands/shell.py:127
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
126	        ):
127	            exec(sys.stdin.read(), globals())
128	            return

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/core/management/commands/squashmigrations.py:126
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
125	                while not answer or answer not in "yn":
126	                    answer = input("Do you wish to proceed? [y/N] ")
127	                    if not answer:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/management/utils.py:4
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
3	import shutil
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with run module.
   Severity: Low   Confidence: High
   Location: ./django/django/core/management/utils.py:8
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
7	from pathlib import Path
8	from subprocess import run
9	
10	from django.apps import apps as installed_apps

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/core/management/utils.py:24
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
23	    try:
24	        p = run(args, capture_output=True, close_fds=os.name != "nt")
25	    except OSError as err:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/core/management/utils.py:175
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
174	        try:
175	            subprocess.run(
176	                [black_path, "--fast", "--", *written_files],
177	                capture_output=True,
178	            )

--------------------------------------------------
>> Issue: [B409:blacklist] Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/django/core/serializers/xml_serializer.py:6
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom
5	import json
6	from xml.dom import pulldom
7	from xml.sax import handler

--------------------------------------------------
>> Issue: [B406:blacklist] Using handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/django/core/serializers/xml_serializer.py:7
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax
6	from xml.dom import pulldom
7	from xml.sax import handler
8	from xml.sax.expatreader import ExpatParser as _ExpatParser

--------------------------------------------------
>> Issue: [B406:blacklist] Using ExpatParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ExpatParser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/django/core/serializers/xml_serializer.py:8
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax
7	from xml.sax import handler
8	from xml.sax.expatreader import ExpatParser as _ExpatParser
9	
10	from django.apps import apps

--------------------------------------------------
>> Issue: [B319:blacklist] Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/django/core/serializers/xml_serializer.py:202
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom
201	        self.handle_forward_references = options.pop("handle_forward_references", False)
202	        self.event_stream = pulldom.parse(self.stream, self._make_parser())
203	        self.db = using

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/db/backends/base/client.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import os
2	import subprocess
3	
4	
5	class BaseDatabaseClient:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/db/backends/base/client.py:28
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
27	        env = {**os.environ, **env} if env else None
28	        subprocess.run(args, env=env, check=True)

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/backends/base/creation.py:213
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
212	                if not autoclobber:
213	                    confirm = input(
214	                        "Type 'yes' if you would like to try deleting the test "
215	                        "database '%s', or 'no' to cancel: " % test_database_name
216	                    )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/db/backends/mysql/creation.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/db/backends/mysql/creation.py:77
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
76	
77	        with subprocess.Popen(
78	            dump_cmd, stdout=subprocess.PIPE, env=dump_env
79	        ) as dump_proc:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/db/backends/mysql/creation.py:80
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
79	        ) as dump_proc:
80	            with subprocess.Popen(
81	                load_cmd,
82	                stdin=dump_proc.stdout,
83	                stdout=subprocess.DEVNULL,
84	                env=load_env,
85	            ):

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/backends/oracle/creation.py:43
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
42	                    if not autoclobber:
43	                        confirm = input(
44	                            "It appears the test database, %s, already exists. "
45	                            "Type 'yes' to delete it, or 'no' to cancel: "
46	                            % parameters["user"]
47	                        )

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/backends/oracle/creation.py:100
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
99	                    if not autoclobber:
100	                        confirm = input(
101	                            "It appears the test user, %s, already exists. Type "
102	                            "'yes' to delete it, or 'no' to cancel: "
103	                            % parameters["user"]
104	                        )

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/backends/oracle/creation.py:173
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
172	            if not autoclobber:
173	                confirm = input("Type 'yes' to delete user %s: " % parameters["user"])
174	            if autoclobber or confirm == "yes":

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/db/backends/sqlite3/_functions.py:401
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
400	        return None
401	    return md5(text.encode()).hexdigest()
402	

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/db/backends/sqlite3/_functions.py:447
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
446	        return None
447	    return sha1(text.encode()).hexdigest()
448	

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/backends/sqlite3/creation.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
38	                if not autoclobber:
39	                    confirm = input(
40	                        "Type 'yes' if you would like to try deleting the test "
41	                        "database '%s', or 'no' to cancel: " % test_database_name
42	                    )

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/db/backends/utils.py:309
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
308	    """
309	    h = md5(usedforsecurity=False)
310	    for arg in args:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/migrations/autodetector.py:865
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
864	            model_state = self.to_state.models[app_label, model_name]
865	            assert model_state.options.get("proxy")
866	            # Depend on the deletion of any possible non-proxy version of us
867	            dependencies = [

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/migrations/autodetector.py:998
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
997	            model_state = self.from_state.models[app_label, model_name]
998	            assert model_state.options.get("proxy")
999	            self.add_operation(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/migrations/graph.py:91
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
90	    def add_node(self, key, migration):
91	        assert key not in self.node_map
92	        node = Node(key)

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/migrations/questioner.py:101
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
100	        self.prompt_output.write(f"{question} ", ending="")
101	        result = input()
102	        if not result and default is not None:

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/migrations/questioner.py:106
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
105	            self.prompt_output.write("Please answer yes or no: ", ending="")
106	            result = input()
107	        return result[0].lower() == "y"

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/migrations/questioner.py:116
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
115	            try:
116	                result = input()
117	                value = int(result)

--------------------------------------------------
>> Issue: [B322:blacklist] The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.
   Severity: High   Confidence: High
   Location: ./django/django/db/migrations/questioner.py:154
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
153	            try:
154	                code = input()
155	            except KeyboardInterrupt:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   Location: ./django/django/db/migrations/questioner.py:168
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval
167	                try:
168	                    return eval(code, {}, {"datetime": datetime, "timezone": timezone})
169	                except Exception as e:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/migrations/state.py:106
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
105	        else:
106	            assert isinstance(real_apps, set)
107	        self.real_apps = real_apps

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/migrations/state.py:466
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
465	            # alter_field().
466	            assert field_name not in relations_to_remote_model[model_key]
467	            relations_to_remote_model[model_key][field_name] = field

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/base.py:979
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
978	        using = using or router.db_for_write(self.__class__, instance=self)
979	        assert not (force_insert and (force_update or update_fields))
980	        assert update_fields is None or update_fields

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/base.py:980
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
979	        assert not (force_insert and (force_update or update_fields))
980	        assert update_fields is None or update_fields
981	        cls = origin = self.__class__

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/expressions.py:208
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
207	    def set_source_expressions(self, exprs):
208	        assert not exprs
209	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/expressions.py:1361
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1360	    def set_source_expressions(self, exprs):
1361	        assert all(isinstance(expr, Col) and expr.alias == self.alias for expr in exprs)
1362	        self.targets = [col.target for col in exprs]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/fields/__init__.py:1402
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1401	        else:
1402	            assert isinstance(value, datetime.date)
1403	            lower = lower.date()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/fields/related.py:1497
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1496	        else:
1497	            assert from_model is not None, (
1498	                "ManyToManyField with intermediate "
1499	                "tables cannot be checked if you don't pass the model "
1500	                "where the field is attached to."
1501	            )
1502	            # Set some useful local variables
1503	            to_model = resolve_relation(from_model, self.remote_field.model)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/fields/related.py:1630
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1629	            else:
1630	                assert from_model is not None, (
1631	                    "ManyToManyField with intermediate "
1632	                    "tables cannot be checked if you don't pass the model "
1633	                    "where the field is attached to."
1634	                )
1635	
1636	                source, through, target = (

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/fields/related_descriptors.py:1183
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
1182	            qn = connection.ops.quote_name
1183	            queryset = queryset.extra(
1184	                select={
1185	                    "_prefetch_related_val_%s"
1186	                    % f.attname: "%s.%s"
1187	                    % (qn(join_table), qn(f.column))
1188	                    for f in fk.local_related_fields
1189	                }

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/functions/datetime.py:82
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
81	            # assert should never be hit.
82	            assert False, "Tried to Extract from an invalid type."
83	        return sql, params

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/query.py:836
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
835	                ):
836	                    assert len(returned_columns) == len(objs_without_pk)
837	                for obj_without_pk, results in zip(objs_without_pk, returned_columns):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/compiler.py:252
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
251	        annotations = {}
252	        assert not (self.query.select and self.query.default_cols)
253	        select_mask = self.query.get_select_mask()

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:274
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
273	                *(
274	                    (alias, RawSQL(*args))
275	                    for alias, args in self.query.extra_select.items()

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:442
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
441	                    OrderBy(
442	                        RawSQL(
443	                            "%s.%s" % (self.quote_name_unless_alias(table), col), []
444	                        ),

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:455
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
454	                        OrderBy(
455	                            Ref(col, RawSQL(*self.query.extra[col])),
456	                            descending=descending,

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:462
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
461	                    yield (
462	                        OrderBy(RawSQL(*self.query.extra[col]), descending=descending),
463	                        False,

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:1668
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
1667	            rhs = "%s.%s" % (qn(alias), qn2(columns[index]))
1668	            query.where.add(RawSQL("%s = %s" % (lhs_sql, rhs), lhs_params), AND)
1669	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/compiler.py:1881
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1880	    def execute_sql(self, returning_fields=None):
1881	        assert not (
1882	            returning_fields
1883	            and len(self.query.objs) != 1
1884	            and not self.connection.features.can_return_rows_from_bulk_insert
1885	        )
1886	        opts = self.query.get_meta()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/compiler.py:1901
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1900	            elif self.connection.features.can_return_columns_from_insert:
1901	                assert len(self.query.objs) == 1
1902	                rows = [

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/compiler.py:1995
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
1994	            sql, params = innerq.get_compiler(connection=self.connection).as_sql()
1995	            innerq = RawSQL("SELECT * FROM (%s) subquery" % sql, params)
1996	        outerq.add_filter("pk__in", innerq)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/query.py:942
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
941	            # Only the first alias (skipped above) should have None join_type
942	            assert self.alias_map[alias].join_type is not None
943	            parent_alias = self.alias_map[alias].parent_alias

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/query.py:998
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
997	        # on their order in change_map.
998	        assert set(change_map).isdisjoint(change_map.values())
999	
1000	        # 1. Update references in "select" (normal columns plus aliases),
1001	        # "group by" and "where".
1002	        self.where.relabel_aliases(change_map)

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/django/db/models/sql/query.py:2502
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
2501	                        extra_names.append(f)
2502	                        selected[f] = RawSQL(*extra)
2503	                    elif f in self.annotation_select:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/sql/where.py:200
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
199	    def set_source_expressions(self, children):
200	        assert len(children) == len(self.children)
201	        self.children = children

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/db/models/utils.py:19
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
18	            model_tuple = model._meta.app_label, model._meta.model_name
19	        assert len(model_tuple) == 2
20	        return model_tuple

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/utils.py:55
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
54	        context = context or self.get_context()
55	        return mark_safe(renderer.render(template, context))
56	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/utils.py:55
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
54	        context = context or self.get_context()
55	        return mark_safe(renderer.render(template, context))
56	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/widgets.py:97
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
96	    def render(self):
97	        return mark_safe(
98	            "\n".join(
99	                chain.from_iterable(
100	                    getattr(self, "render_" + name)() for name in MEDIA_TYPES
101	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/widgets.py:97
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
96	    def render(self):
97	        return mark_safe(
98	            "\n".join(
99	                chain.from_iterable(
100	                    getattr(self, "render_" + name)() for name in MEDIA_TYPES
101	                )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/widgets.py:287
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
286	            renderer = get_default_renderer()
287	        return mark_safe(renderer.render(template_name, context))
288	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/forms/widgets.py:287
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
286	            renderer = get_default_renderer()
287	        return mark_safe(renderer.render(template_name, context))
288	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/http/multipartparser.py:455
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
454	            while remaining != 0:
455	                assert remaining > 0, "remaining bytes to read should never go negative"
456	
457	                try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/http/response.py:331
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
330	                closer()
331	            except Exception:
332	                pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/http/response.py:406
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
405	                    value.close()
406	                except Exception:
407	                    pass

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/middleware/csrf.py:156
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
155	        request_csrf_token = _unmask_cipher_token(request_csrf_token)
156	    assert len(request_csrf_token) == CSRF_SECRET_LENGTH
157	    return constant_time_compare(request_csrf_token, csrf_secret)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/template/base.py:396
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
395	                # BLOCK_TAG_START was handled above.
396	                assert token_start == COMMENT_TAG_START
397	                return Token(TokenType.COMMENT, content, position, lineno)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:741
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
740	                if not lookup:
741	                    arg_vals.append(mark_safe(arg))
742	                else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:741
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
740	                if not lookup:
741	                    arg_vals.append(mark_safe(arg))
742	                else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:751
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
750	            if getattr(func, "is_safe", False) and isinstance(obj, SafeData):
751	                obj = mark_safe(new_obj)
752	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:751
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
750	            if getattr(func, "is_safe", False) and isinstance(obj, SafeData):
751	                obj = mark_safe(new_obj)
752	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:839
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
838	            try:
839	                self.literal = mark_safe(unescape_string_literal(var))
840	            except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:839
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
838	            try:
839	                self.literal = mark_safe(unescape_string_literal(var))
840	            except ValueError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:861
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
860	            msgid = value.replace("%", "%%")
861	            msgid = mark_safe(msgid) if is_safe else msgid
862	            if self.message_context:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:861
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
860	            msgid = value.replace("%", "%%")
861	            msgid = mark_safe(msgid) if is_safe else msgid
862	            if self.message_context:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/base.py:1016
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
1015	    def render(self, context):
1016	        return SafeString("".join([node.render_annotated(context) for node in self]))
1017	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:49
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
48	        if isinstance(first, SafeData) and getattr(unwrap(func), "is_safe", False):
49	            result = mark_safe(result)
50	        return result

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:49
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
48	        if isinstance(first, SafeData) and getattr(unwrap(func), "is_safe", False):
49	            result = mark_safe(result)
50	        return result

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:184
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
183	    if not m and p <= 0:
184	        return mark_safe(
185	            formats.number_format(
186	                "%d" % (int(d)),
187	                0,
188	                use_l10n=use_l10n,
189	                force_grouping=force_grouping,
190	            )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:184
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
183	    if not m and p <= 0:
184	        return mark_safe(
185	            formats.number_format(
186	                "%d" % (int(d)),
187	                0,
188	                use_l10n=use_l10n,
189	                force_grouping=force_grouping,
190	            )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:212
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
211	    number = "".join(reversed(digits))
212	    return mark_safe(
213	        formats.number_format(
214	            number,
215	            abs(p),
216	            use_l10n=use_l10n,
217	            force_grouping=force_grouping,
218	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:212
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
211	    number = "".join(reversed(digits))
212	    return mark_safe(
213	        formats.number_format(
214	            number,
215	            abs(p),
216	            use_l10n=use_l10n,
217	            force_grouping=force_grouping,
218	        )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:243
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
242	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
243	    return mark_safe("\n".join(lines))
244	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:243
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
242	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
243	    return mark_safe("\n".join(lines))
244	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:384
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
383	    """Convert URLs in plain text into clickable links."""
384	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
385	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:384
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
383	    """Convert URLs in plain text into clickable links."""
384	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
385	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:396
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
395	    """
396	    return mark_safe(
397	        _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)
398	    )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:396
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
395	    """
396	    return mark_safe(
397	        _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)
398	    )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:443
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
442	    if safe and arg != ";":
443	        return mark_safe(value)
444	    return value

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:443
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
442	    if safe and arg != ";":
443	        return mark_safe(value)
444	    return value

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:489
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
488	    autoescape = autoescape and not isinstance(value, SafeData)
489	    return mark_safe(linebreaks(value, autoescape))
490	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:489
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
488	    autoescape = autoescape and not isinstance(value, SafeData)
489	    return mark_safe(linebreaks(value, autoescape))
490	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:503
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
502	        value = escape(value)
503	    return mark_safe(value.replace("\n", "<br>"))
504	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:503
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
502	        value = escape(value)
503	    return mark_safe(value.replace("\n", "<br>"))
504	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:510
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
509	    """Mark the value as a string that should not be auto-escaped."""
510	    return mark_safe(value)
511	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:510
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
509	    """Mark the value as a string that should not be auto-escaped."""
510	    return mark_safe(value)
511	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:520
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
519	    """
520	    return [mark_safe(obj) for obj in value]
521	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:520
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
519	    """
520	    return [mark_safe(obj) for obj in value]
521	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:616
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
615	        return value
616	    return mark_safe(data)
617	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:616
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
615	        return value
616	    return mark_safe(data)
617	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/template/defaultfilters.py:641
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
640	    try:
641	        return random_module.choice(value)
642	    except IndexError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:732
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
731	
732	    return mark_safe(list_formatter(value))
733	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaultfilters.py:732
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
731	
732	    return mark_safe(list_formatter(value))
733	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaulttags.py:58
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
57	        if self.setting:
58	            return mark_safe(output)
59	        else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaulttags.py:58
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
57	        if self.setting:
58	            return mark_safe(output)
59	        else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaulttags.py:250
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
249	                    context.pop()
250	        return mark_safe("".join(nodelist))
251	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/defaulttags.py:250
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
249	                    context.pop()
250	        return mark_safe("".join(nodelist))
251	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/loader_tags.py:81
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
80	        ):
81	            return mark_safe(self.render(self.context))
82	        return ""

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/loader_tags.py:81
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
80	        ):
81	            return mark_safe(self.render(self.context))
82	        return ""

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/template/loaders/cached.py:96
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
95	    def generate_hash(self, values):
96	        return hashlib.sha1("|".join(values).encode()).hexdigest()
97	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/templatetags/i18n.py:96
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
95	        value = value.replace("%%", "%")
96	        value = mark_safe(value) if is_safe else value
97	        if self.asvar:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/templatetags/i18n.py:96
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
95	        value = value.replace("%%", "%")
96	        value = mark_safe(value) if is_safe else value
97	        if self.asvar:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/templatetags/i18n.py:201
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
200	        if self.asvar:
201	            context[self.asvar] = SafeString(result)
202	            return ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/test/client.py:92
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
91	            size = self.__len
92	        assert (
93	            self.__len >= size
94	        ), "Cannot read more than the available bytes from the HTTP incoming data."
95	        content = self.__content.read(size)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/test/client.py:105
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
104	            size = self.__len
105	        assert (
106	            self.__len >= size
107	        ), "Cannot read more than the available bytes from the HTTP incoming data."
108	        content = self.__content.readline(size)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/test/runner.py:10
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
9	import os
10	import pickle
11	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/test/runner.py:186
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
185	        """
186	        pickle.loads(pickle.dumps(obj))
187	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/test/runner.py:622
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
621	            # Limit seeds to 10 digits for simpler output.
622	            seed = random.randint(0, 10**10 - 1)
623	            seed_source = "generated"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/test/runner.py:905
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
904	            if os.path.exists(label_as_path):
905	                assert tests is None
906	                raise RuntimeError(

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/django/test/testcases.py:4
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
3	import logging
4	import pickle
5	import posixpath

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/django/test/testcases.py:105
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
104	    try:
105	        pickle.loads(pickle.dumps(obj))
106	    except (AttributeError, TypeError, pickle.PickleError):

--------------------------------------------------
>> Issue: [B408:blacklist] Using Node to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Node with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/django/test/utils.py:15
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
14	from unittest import TestCase, skipIf, skipUnless
15	from xml.dom.minidom import Node, parseString
16	
17	from asgiref.sync import iscoroutinefunction

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/test/utils.py:552
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
551	            # Hack used when instantiating from SimpleTestCase.setUpClass.
552	            assert not kwargs
553	            self.operations = args[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/test/utils.py:555
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
554	        else:
555	            assert not args
556	            self.operations = list(kwargs.items())

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/django/test/utils.py:687
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
686	    # Parse the want and got strings, and compare the parsings.
687	    want_root = first_node(parseString(want))
688	    got_root = first_node(parseString(got))

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/django/test/utils.py:688
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
687	    want_root = first_node(parseString(want))
688	    got_root = first_node(parseString(got))
689	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with PicklingError module.
   Severity: Low   Confidence: High
   Location: ./django/django/urls/resolvers.py:14
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
13	from importlib import import_module
14	from pickle import PicklingError
15	from urllib.parse import quote

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/autoreload.py:5
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
4	import signal
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/autoreload.py:274
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
273	    while True:
274	        p = subprocess.run(args, env=new_environ, close_fds=False)
275	        if p.returncode != 3:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/autoreload.py:338
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
337	            get_resolver().urlconf_module
338	        except Exception:
339	            # Loading the urlconf can result in errors during development.

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/cache.py:122
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
121	        response.headers["ETag"] = quote_etag(
122	            md5(response.content, usedforsecurity=False).hexdigest(),
123	        )

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/cache.py:352
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
351	    """Return a cache key from the headers given in the header list."""
352	    ctx = md5(usedforsecurity=False)
353	    for header in headerlist:

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/cache.py:357
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
356	            ctx.update(value.encode())
357	    url = md5(request.build_absolute_uri().encode("ascii"), usedforsecurity=False)
358	    cache_key = "views.decorators.cache.cache_page.%s.%s.%s.%s" % (

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/cache.py:369
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
368	    """Return a cache key for the header cache."""
369	    url = md5(request.build_absolute_uri().encode("ascii"), usedforsecurity=False)
370	    cache_key = "views.decorators.cache.cache_header.%s.%s" % (

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:57
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
56	    """
57	    return SafeString(html.escape(str(text)))
58	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:82
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
81	    """Hex encode characters for use in JavaScript strings."""
82	    return mark_safe(str(value).translate(_js_escapes))
83	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:82
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
81	    """Hex encode characters for use in JavaScript strings."""
82	    return mark_safe(str(value).translate(_js_escapes))
83	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:105
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
104	        template = '<script id="{}" type="application/json">{}</script>'
105	        args = (element_id, mark_safe(json_str))
106	    else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:105
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
104	        template = '<script id="{}" type="application/json">{}</script>'
105	        args = (element_id, mark_safe(json_str))
106	    else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:108
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
107	        template = '<script type="application/json">{}</script>'
108	        args = (mark_safe(json_str),)
109	    return format_html(template, *args)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:108
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
107	        template = '<script type="application/json">{}</script>'
108	        args = (mark_safe(json_str),)
109	    return format_html(template, *args)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:143
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
142	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
143	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
144	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:143
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
142	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
143	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
144	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:160
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
159	    """
160	    return mark_safe(
161	        conditional_escape(sep).join(
162	            (
163	                format_html(format_string, **args)
164	                if isinstance(args, Mapping)
165	                else format_html(format_string, *args)
166	            )
167	            for args in args_generator
168	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:160
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
159	    """
160	    return mark_safe(
161	        conditional_escape(sep).join(
162	            (
163	                format_html(format_string, **args)
164	                if isinstance(args, Mapping)
165	                else format_html(format_string, *args)
166	            )
167	            for args in args_generator
168	        )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:375
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
374	                )
375	                return mark_safe(f"{lead}{middle}{trail}")
376	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:375
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
374	                )
375	                return mark_safe(f"{lead}{middle}{trail}")
376	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:378
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
377	                if safe_input:
378	                    return mark_safe(word)
379	                elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:378
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
377	                if safe_input:
378	                    return mark_safe(word)
379	                elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:382
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
381	        elif safe_input:
382	            return mark_safe(word)
383	        elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:382
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
381	        elif safe_input:
382	            return mark_safe(word)
383	        elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:516
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
515	    klass_str = klass.__str__
516	    klass.__str__ = lambda self: mark_safe(klass_str(self))
517	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/html.py:516
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
515	    klass_str = klass.__str__
516	    klass.__str__ = lambda self: mark_safe(klass_str(self))
517	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/http.py:143
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
142	        return parse_http_date(date)
143	    except Exception:
144	        pass

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/lorem_ipsum.py:235
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
234	    sections = [
235	        " ".join(random.sample(WORDS, random.randint(3, 12)))
236	        for i in range(random.randint(1, 5))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/lorem_ipsum.py:236
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
235	        " ".join(random.sample(WORDS, random.randint(3, 12)))
236	        for i in range(random.randint(1, 5))
237	    ]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/lorem_ipsum.py:240
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
239	    # Convert to sentence case and add end punctuation.
240	    return "%s%s%s" % (s[0].upper(), s[1:], random.choice("?."))
241	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/lorem_ipsum.py:249
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
248	    """
249	    return " ".join(sentence() for i in range(random.randint(1, 4)))
250	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/numberformat.py:29
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
28	    if number is None or number == "":
29	        return mark_safe(number)
30	    if use_l10n is None:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/numberformat.py:29
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
28	    if number is None or number == "":
29	        return mark_safe(number)
30	    if use_l10n is None:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/numberformat.py:37
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
36	    if isinstance(number, int) and not use_grouping and not decimal_pos:
37	        return mark_safe(number)
38	    # sign

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/numberformat.py:37
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
36	    if isinstance(number, int) and not use_grouping and not decimal_pos:
37	        return mark_safe(number)
38	    # sign

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/regex_helper.py:351
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
350	        else:
351	            assert not flags, "flags must be empty if regex is passed pre-compiled"
352	            return regex

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/translation/trans_real.py:389
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
388	    if isinstance(message, SafeData):
389	        return mark_safe(result)
390	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/translation/trans_real.py:389
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
388	    if isinstance(message, SafeData):
389	        return mark_safe(result)
390	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/translation/trans_real.py:401
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
400	    elif isinstance(message, SafeData):
401	        result = mark_safe(result)
402	    return result

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/django/utils/translation/trans_real.py:401
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
400	    elif isinstance(message, SafeData):
401	        result = mark_safe(result)
402	    return result

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/version.py:4
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
3	import os
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/version.py:64
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
63	    else:
64	        assert len(version) == 5
65	        assert version[3] in ("alpha", "beta", "rc", "final")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/version.py:65
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
64	        assert len(version) == 5
65	        assert version[3] in ("alpha", "beta", "rc", "final")
66	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   Location: ./django/django/utils/version.py:91
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
90	    repo_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
91	    git_log = subprocess.run(
92	        "git log --pretty=format:%ct --quiet -1 HEAD",
93	        capture_output=True,
94	        shell=True,
95	        cwd=repo_dir,
96	        text=True,
97	    )

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   Location: ./django/django/utils/version.py:94
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html
93	        capture_output=True,
94	        shell=True,
95	        cwd=repo_dir,
96	        text=True,
97	    )
98	    timestamp = git_log.stdout
99	    tz = datetime.timezone.utc
100	    try:

--------------------------------------------------
>> Issue: [B406:blacklist] Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/django/utils/xmlutils.py:6
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax
5	import re
6	from xml.sax.saxutils import XMLGenerator
7	
8	
9	class UnserializableContentError(ValueError):

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with run module.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
25	from datetime import datetime
26	from subprocess import run
27	
28	import requests

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:52
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
51	
52	    assert api_token, "Please define the TRANSIFEX_API_TOKEN env var."
53	    headers = {"Authorization": f"Bearer {api_token}"}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:61
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
60	    response = requests.get(resources_url, headers=headers, params=base_params)
61	    assert response.ok, response.content
62	    data = response.json()["data"]

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   Location: ./django/scripts/manage_translations.py:156
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html
155	        capture_output=True,
156	        shell=True,
157	    )
158	    num_changes = int(p.stdout.strip())
159	    print("%d changed/added messages in '%s' catalog." % (num_changes, cat_name))
160	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:204
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
203	            )
204	            p = run(
205	                ["msgfmt", "-vc", "-o", "/dev/null", po_path],
206	                capture_output=True,
207	                env={"LANG": "C"},
208	                encoding="utf-8",
209	            )

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:204
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
203	            )
204	            p = run(
205	                ["msgfmt", "-vc", "-o", "/dev/null", po_path],
206	                capture_output=True,
207	                env={"LANG": "C"},
208	                encoding="utf-8",
209	            )

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:238
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
237	        if languages is None:
238	            run(cmd + ["--all"])
239	            target_langs = sorted(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:244
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
243	            for lang in languages:
244	                run(cmd + ["-l", lang])
245	            target_langs = languages

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:262
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
261	                continue
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:262
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
261	                continue
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:263
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])
264	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/scripts/manage_translations.py:263
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])
264	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   Location: ./django/scripts/manage_translations.py:360
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval
359	    cmd = kwargs.pop("cmd")
360	    eval(cmd)(**kwargs)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/test_date_hierarchy.py:18
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
17	    def setUpTestData(cls):
18	        cls.superuser = User.objects.create_superuser(
19	            username="super", email="a@b.com", password="xxx"
20	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:96
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
95	    def setUpTestData(cls):
96	        cls.superuser = User.objects.create_superuser(
97	            username="super", email="a@b.com", password="xxx"
98	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:101
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
100	    def _create_superuser(self, username):
101	        return User.objects.create_superuser(
102	            username=username, email="a@b.com", password="xxx"
103	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1816
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1815	        """{% get_admin_log %} works without specifying a user."""
1816	        user = User(username="jondoe", password="secret", email="super@example.com")
1817	        user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1857
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1856	    def setUp(self):
1857	        User.objects.create_superuser(username="super", password="secret", email=None)
1858	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1865
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1864	
1865	        self.admin_login(username="super", password="secret")
1866	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1913
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1912	        Parent.objects.bulk_create([Parent(name="parent%d" % i) for i in range(5)])
1913	        self.admin_login(username="super", password="secret")
1914	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1935
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1934	
1935	        self.admin_login(username="super", password="secret")
1936	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:1971
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1970	        Parent.objects.bulk_create([Parent(name="parent%d" % i) for i in range(101)])
1971	        self.admin_login(username="super", password="secret")
1972	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2030
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2029	
2030	        self.admin_login(username="super", password="secret")
2031	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2056
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2055	
2056	        self.admin_login(username="super", password="secret")
2057	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2085
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2084	
2085	        self.admin_login(username="super", password="secret")
2086	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2108
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2107	
2108	        self.admin_login(username="super", password="secret")
2109	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2160
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2159	
2160	        self.admin_login(username="super", password="secret")
2161	        changelist_url = reverse("admin:admin_changelist_proxyuser_changelist")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_changelist/tests.py:2187
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2186	
2187	        self.admin_login(username="super", password="secret")
2188	        changelist_url = reverse("admin:admin_changelist_grandchild_changelist")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_custom_urls/tests.py:24
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
23	    def setUpTestData(cls):
24	        cls.superuser = User.objects.create_superuser(
25	            username="super", password="secret", email="super@example.com"
26	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_docs/test_views.py:494
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
493	        )
494	        staff_user = User.objects.create_user(
495	            username="staff", password="secret", is_staff=True
496	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_docs/test_views.py:542
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
541	    def test_model_index_with_model_permission(self):
542	        staff_user = User.objects.create_user(
543	            username="staff", password="secret", is_staff=True
544	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_docs/tests.py:8
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7	    def setUpTestData(cls):
8	        cls.superuser = User.objects.create_superuser(
9	            username="super", password="secret", email="super@example.com"
10	        )

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/tests/admin_inlines/models.py:60
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
59	        while not self.rand_pk:
60	            test_pk = random.randint(1, 99999)
61	            if not NonAutoPKBook.objects.filter(rand_pk=test_pk).exists():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:59
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
58	    def setUpTestData(cls):
59	        cls.superuser = User.objects.create_superuser(
60	            username="super", email="super@example.com", password="secret"
61	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:78
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
77	
78	        cls.view_only_user = User.objects.create_user(
79	            username="user",
80	            password="pwd",
81	            is_staff=True,
82	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:1392
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1391	    def setUpTestData(cls):
1392	        cls.user = User.objects.create_user(
1393	            "testing", password="password", is_staff=True
1394	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:1880
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1879	    def setUp(self):
1880	        User.objects.create_superuser(
1881	            username="super", password="secret", email="super@example.com"
1882	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:1891
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1890	
1891	        self.admin_login(username="super", password="secret")
1892	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:1910
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1909	
1910	        self.admin_login(username="super", password="secret")
1911	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:1938
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1937	
1938	        self.admin_login(username="super", password="secret")
1939	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2004
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2003	
2004	        self.admin_login(username="super", password="secret")
2005	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2075
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2074	
2075	        self.admin_login(username="super", password="secret")
2076	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2160
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2159	
2160	        user = User.objects.create_user("testing", password="password", is_staff=True)
2161	        user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2173
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2172	        )
2173	        self.admin_login(username="testing", password="password")
2174	        poll = Poll.objects.create(name="Survey")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2184
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2183	
2184	        self.admin_login(username="super", password="secret")
2185	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2242
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2241	        # Collapsed inlines use details and summary elements.
2242	        self.admin_login(username="super", password="secret")
2243	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2269
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2268	
2269	        self.admin_login(username="super", password="secret")
2270	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2317
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2316	
2317	        self.admin_login(username="super", password="secret")
2318	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2360
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2359	
2360	        self.admin_login(username="super", password="secret")
2361	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2406
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2405	
2406	        self.admin_login(username="super", password="secret")
2407	        # Hide sidebar.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_inlines/tests.py:2464
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2463	
2464	        self.admin_login(username="super", password="secret")
2465	        self.selenium.get(

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/admin_scripts/tests.py:12
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
11	import stat
12	import subprocess
13	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/admin_scripts/tests.py:139
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
138	
139	        p = subprocess.run(
140	            [sys.executable, *args],
141	            capture_output=True,
142	            cwd=self.test_dir,
143	            env=test_environ,
144	            text=True,
145	            umask=umask,
146	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_utils/test_logentry.py:21
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
20	    def setUpTestData(cls):
21	        cls.user = User.objects.create_superuser(
22	            username="super", password="secret", email="super@example.com"
23	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/admin_utils/tests.py:384
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
383	        class MyForm(forms.Form):
384	            text = forms.CharField(label=mark_safe("<i>text</i>"))
385	            cb = forms.BooleanField(label=mark_safe("<i>cb</i>"))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/admin_utils/tests.py:385
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
384	            text = forms.CharField(label=mark_safe("<i>text</i>"))
385	            cb = forms.BooleanField(label=mark_safe("<i>cb</i>"))
386	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/admin_views/admin.py:626
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
625	    def multiline_html(self, instance):
626	        return mark_safe("Multiline<br>\nhtml<br>\ncontent")
627	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_actions.py:31
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
30	    def setUpTestData(cls):
31	        cls.superuser = User.objects.create_superuser(
32	            username="super", password="secret", email="super@example.com"
33	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_actions.py:505
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
504	        )
505	        cls.user = User.objects.create_user(
506	            username="user",
507	            password="secret",
508	            email="user@example.com",
509	            is_staff=True,
510	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_adminsite.py:41
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
40	    def setUpTestData(cls):
41	        cls.u1 = User.objects.create_superuser(
42	            username="super", password="secret", email="super@example.com"
43	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_autocomplete_view.py:91
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
90	    def setUpTestData(cls):
91	        cls.user = User.objects.create_user(
92	            username="user",
93	            password="secret",
94	            email="user@example.com",
95	            is_staff=True,
96	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_autocomplete_view.py:401
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
400	    def setUp(self):
401	        self.superuser = User.objects.create_superuser(
402	            username="super",
403	            password="secret",
404	            email="super@example.com",
405	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_autocomplete_view.py:406
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
405	        )
406	        self.admin_login(
407	            username="super",
408	            password="secret",
409	            login_url=reverse("autocomplete_admin:index"),
410	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_breadcrumbs.py:10
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
9	    def setUpTestData(cls):
10	        cls.superuser = User.objects.create_superuser(
11	            username="super",
12	            password="secret",
13	            email="super@example.com",
14	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_forms.py:17
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
16	    def setUpTestData(cls):
17	        User.objects.create_user(
18	            username="inactive", password="password", is_active=False
19	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_history_view.py:15
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
14	    def setUpTestData(cls):
15	        cls.superuser = User.objects.create_superuser(
16	            username="super",
17	            password="secret",
18	            email="super@example.com",
19	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_history_view.py:58
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
57	    def setUp(self):
58	        self.superuser = User.objects.create_superuser(
59	            username="super",
60	            password="secret",
61	            email="super@example.com",
62	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_history_view.py:71
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
70	            )
71	        self.admin_login(
72	            username="super",
73	            password="secret",
74	            login_url=reverse("admin:index"),
75	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_multidb.py:51
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
50	            Router.target_db = db
51	            cls.superusers[db] = User.objects.create_superuser(
52	                username="admin",
53	                password="something",
54	                email="test@test.org",
55	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_multidb.py:199
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
198	        book = Book.objects.using("other").create(name="other book")
199	        user = User.objects.create_superuser(
200	            username="super", password="secret", email="super@example.com"
201	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_nav_sidebar.py:34
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
33	    def setUpTestData(cls):
34	        cls.superuser = User.objects.create_superuser(
35	            username="super",
36	            password="secret",
37	            email="super@example.com",
38	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_nav_sidebar.py:126
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
125	    def setUp(self):
126	        self.superuser = User.objects.create_superuser(
127	            username="super",
128	            password="secret",
129	            email="super@example.com",
130	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_nav_sidebar.py:131
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
130	        )
131	        self.admin_login(
132	            username="super",
133	            password="secret",
134	            login_url=reverse("test_with_sidebar:index"),
135	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_password_form.py:12
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
11	    def setUp(self):
12	        self.superuser = User.objects.create_superuser(
13	            username="super",
14	            password="secret",
15	            email="super@example.com",
16	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_password_form.py:28
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
27	        user_add_url = reverse("auth_test_admin:auth_user_add")
28	        self.admin_login(username="super", password="secret")
29	        self.selenium.get(self.live_server_url + user_add_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'charles'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_password_form.py:75
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
74	
75	        user = User.objects.create_user(
76	            username="ada", password="charles", email="ada@example.com"
77	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_password_form.py:79
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
78	        user_url = reverse("auth_test_admin:auth_user_password_change", args=(user.pk,))
79	        self.admin_login(username="super", password="secret")
80	        self.selenium.get(self.live_server_url + user_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_related_object_lookups.py:14
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
13	    def setUp(self):
14	        self.superuser = User.objects.create_superuser(
15	            username="super", password="secret", email="super@example.com"
16	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_related_object_lookups.py:17
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
16	        )
17	        self.admin_login(
18	            username="super", password="secret", login_url=reverse("admin:index")
19	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_skip_link_to_content.py:12
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
11	    def setUp(self):
12	        self.superuser = User.objects.create_superuser(
13	            username="super",
14	            password="secret",
15	            email="super@example.com",
16	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_skip_link_to_content.py:23
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
22	
23	        self.admin_login(
24	            username="super",
25	            password="secret",
26	            login_url=reverse("admin:index"),
27	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_skip_link_to_content.py:74
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
73	
74	        self.admin_login(
75	            username="super",
76	            password="secret",
77	            login_url=reverse("admin:index"),
78	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_skip_link_to_content.py:104
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
103	        with override_settings(LANGUAGE_CODE="ar"):
104	            self.admin_login(
105	                username="super",
106	                password="secret",
107	                login_url=reverse("admin:index"),
108	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_templatetags.py:38
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
37	    def test_submit_row_save_as_new_add_permission_required(self):
38	        change_user = User.objects.create_user(
39	            username="change_user", password="secret", is_staff=True
40	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_templatetags.py:54
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
53	
54	        add_user = User.objects.create_user(
55	            username="add_user", password="secret", is_staff=True
56	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/test_templatetags.py:140
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
139	    def setUpTestData(cls):
140	        cls.superuser = User.objects.create_superuser(
141	            username="super", password="secret", email="super@example.com"
142	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:194
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
193	    def setUpTestData(cls):
194	        cls.superuser = User.objects.create_superuser(
195	            username="super", password="secret", email="super@example.com"
196	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:1527
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1526	    def test_view_subtitle_per_object(self):
1527	        viewuser = User.objects.create_user(
1528	            username="viewuser",
1529	            password="secret",
1530	            is_staff=True,
1531	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:1888
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1887	    def setUpTestData(cls):
1888	        cls.superuser = User.objects.create_superuser(
1889	            username="super", password="secret", email="super@example.com"
1890	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:1949
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1948	    def setUpTestData(cls):
1949	        cls.superuser = User.objects.create_superuser(
1950	            username="super", password="secret", email="super@example.com"
1951	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:1980
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1979	    def setUpTestData(cls):
1980	        cls.superuser = User.objects.create_superuser(
1981	            username="super", password="secret", email="super@example.com"
1982	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2193
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2192	    def setUpTestData(cls):
2193	        cls.superuser = User.objects.create_superuser(
2194	            username="super", password="secret", email="super@example.com"
2195	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2196
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2195	        )
2196	        cls.viewuser = User.objects.create_user(
2197	            username="viewuser", password="secret", is_staff=True
2198	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2199
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2198	        )
2199	        cls.adduser = User.objects.create_user(
2200	            username="adduser", password="secret", is_staff=True
2201	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2202
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2201	        )
2202	        cls.changeuser = User.objects.create_user(
2203	            username="changeuser", password="secret", is_staff=True
2204	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2205
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2204	        )
2205	        cls.deleteuser = User.objects.create_user(
2206	            username="deleteuser", password="secret", is_staff=True
2207	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2208
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2207	        )
2208	        cls.joepublicuser = User.objects.create_user(
2209	            username="joepublic", password="secret"
2210	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2211
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2210	        )
2211	        cls.nostaffuser = User.objects.create_user(
2212	            username="nostaff", password="secret"
2213	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:2339
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2338	        self.assertContains(login, ERROR_MESSAGE)
2339	        new_user = User(username="jondoe", password="secret", email="super@example.com")
2340	        new_user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3438
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3437	    def setUpTestData(cls):
3438	        cls.viewuser = User.objects.create_user(
3439	            username="viewuser", password="secret", is_staff=True
3440	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3441
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3440	        )
3441	        cls.adduser = User.objects.create_user(
3442	            username="adduser", password="secret", is_staff=True
3443	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3444
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3443	        )
3444	        cls.changeuser = User.objects.create_user(
3445	            username="changeuser", password="secret", is_staff=True
3446	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3447
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3446	        )
3447	        cls.deleteuser = User.objects.create_user(
3448	            username="deleteuser", password="secret", is_staff=True
3449	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3465
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3464	        # UserProxy instances.
3465	        cls.user_proxy = UserProxy.objects.create(
3466	            username="user_proxy", password="secret"
3467	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3525
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3524	        # User who can change Reports
3525	        cls.changeuser = User.objects.create_user(
3526	            username="changeuser", password="secret", is_staff=True
3527	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3546
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3545	    def setUpTestData(cls):
3546	        cls.superuser = User.objects.create_superuser(
3547	            username="super", password="secret", email="super@example.com"
3548	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3549
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3548	        )
3549	        cls.deleteuser = User.objects.create_user(
3550	            username="deleteuser", password="secret", is_staff=True
3551	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3829
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3828	    def setUpTestData(cls):
3829	        cls.superuser = User.objects.create_superuser(
3830	            username="super", password="secret", email="super@example.com"
3831	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:3850
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
3849	    def setUpTestData(cls):
3850	        cls.superuser = User.objects.create_superuser(
3851	            username="super", password="secret", email="super@example.com"
3852	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4112
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4111	    def setUpTestData(cls):
4112	        cls.superuser = User.objects.create_superuser(
4113	            username="super", password="secret", email="super@example.com"
4114	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4207
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4206	    def setUpTestData(cls):
4207	        cls.superuser = User.objects.create_superuser(
4208	            username="super", password="secret", email="super@example.com"
4209	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4645
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4644	    def setUpTestData(cls):
4645	        cls.superuser = User.objects.create_superuser(
4646	            username="super", password="secret", email="super@example.com"
4647	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4648
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4647	        )
4648	        cls.joepublicuser = User.objects.create_user(
4649	            username="joepublic", password="secret"
4650	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4821
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4820	    def setUpTestData(cls):
4821	        cls.superuser = User.objects.create_superuser(
4822	            username="super", password="secret", email="super@example.com"
4823	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4912
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4911	    def setUpTestData(cls):
4912	        cls.superuser = User.objects.create_superuser(
4913	            username="super", password="secret", email="super@example.com"
4914	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4938
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4937	    def setUpTestData(cls):
4938	        cls.superuser = User.objects.create_superuser(
4939	            username="super", password="secret", email="super@example.com"
4940	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:4957
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
4956	    def setUpTestData(cls):
4957	        cls.superuser = User.objects.create_superuser(
4958	            username="super", password="secret", email="super@example.com"
4959	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5259
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5258	    def setUpTestData(cls):
5259	        cls.superuser = User.objects.create_superuser(
5260	            username="super", password="secret", email="super@example.com"
5261	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5312
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5311	    def setUpTestData(cls):
5312	        cls.superuser = User.objects.create_superuser(
5313	            username="super", password="secret", email="super@example.com"
5314	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5638
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5637	    def setUpTestData(cls):
5638	        cls.superuser = User.objects.create_superuser(
5639	            username="super", password="secret", email="super@example.com"
5640	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5719
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5718	    def setUpTestData(cls):
5719	        cls.superuser = User.objects.create_superuser(
5720	            username="super", password="secret", email="super@example.com"
5721	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5796
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5795	    def setUp(self):
5796	        self.superuser = User.objects.create_superuser(
5797	            username="super", password="secret", email="super@example.com"
5798	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:5826
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
5825	
5826	        self.admin_login(
5827	            username="super", password="secret", login_url=reverse("admin:index")
5828	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6079
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6078	        )
6079	        self.admin_login(
6080	            username="super", password="secret", login_url=reverse("admin:index")
6081	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6117
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6116	
6117	        self.admin_login(
6118	            username="super", password="secret", login_url=reverse("admin:index")
6119	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6133
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6132	
6133	        self.admin_login(
6134	            username="super",
6135	            password="secret",
6136	            login_url=reverse("admin7:index"),
6137	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6161
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6160	
6161	        self.admin_login(
6162	            username="super",
6163	            password="secret",
6164	            login_url=reverse("admin7:index"),
6165	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6194
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6193	
6194	        self.admin_login(
6195	            username="super", password="secret", login_url=reverse("admin:index")
6196	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newuser'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6198
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6197	        # Create a new user to ensure that no extra permissions have been set.
6198	        user = User.objects.create_user(username="new", password="newuser")
6199	        url = self.live_server_url + reverse("admin:auth_user_change", args=[user.id])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6251
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6250	        # First form field has a single widget
6251	        self.admin_login(
6252	            username="super", password="secret", login_url=reverse("admin:index")
6253	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6282
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6281	        full_url = self.live_server_url + url
6282	        self.admin_login(
6283	            username="super", password="secret", login_url=reverse("admin:index")
6284	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6307
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6306	        full_url = self.live_server_url + url
6307	        self.admin_login(
6308	            username="super", password="secret", login_url=reverse("admin:index")
6309	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6334
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6333	        )
6334	        self.admin_login(
6335	            username="super", password="secret", login_url=reverse("admin:index")
6336	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6388
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6387	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6388	        self.admin_login(
6389	            username="super", password="secret", login_url=reverse("admin:index")
6390	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6412
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6411	
6412	        self.admin_login(
6413	            username="super", password="secret", login_url=reverse("admin:index")
6414	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6437
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6436	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6437	        self.admin_login(
6438	            username="super", password="secret", login_url=reverse("admin:index")
6439	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6463
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6462	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6463	        self.admin_login(
6464	            username="super", password="secret", login_url=reverse("admin:index")
6465	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6485
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6484	        RelatedWithUUIDPKModel.objects.create(parent=parent)
6485	        self.admin_login(
6486	            username="super", password="secret", login_url=reverse("admin:index")
6487	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6539
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6538	        Person.objects.create(name="Grace Hopper", gender=1, alive=False)
6539	        self.admin_login(
6540	            username="super", password="secret", login_url=reverse("admin:index")
6541	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6562
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6561	
6562	        self.admin_login(
6563	            username="super", password="secret", login_url=reverse("admin:index")
6564	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6613
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6612	
6613	        self.admin_login(
6614	            username="super", password="secret", login_url=reverse("admin:index")
6615	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6647
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6646	
6647	        self.admin_login(
6648	            username="super",
6649	            password="secret",
6650	            login_url=reverse("admin:index"),
6651	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6678
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6677	
6678	        self.admin_login(
6679	            username="super", password="secret", login_url=reverse("admin:index")
6680	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6828
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6827	
6828	        self.admin_login(
6829	            username="super", password="secret", login_url=reverse("admin:index")
6830	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6849
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6848	
6849	        self.admin_login(
6850	            username="super", password="secret", login_url=reverse("admin:index")
6851	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:6869
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
6868	    def setUpTestData(cls):
6869	        cls.superuser = User.objects.create_superuser(
6870	            username="super", password="secret", email="super@example.com"
6871	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7150
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7149	    def setUpTestData(cls):
7150	        cls.superuser = User.objects.create_superuser(
7151	            username="super", password="secret", email="super@example.com"
7152	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7177
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7176	    def setUpTestData(cls):
7177	        cls.superuser = User.objects.create_superuser(
7178	            username="super", password="secret", email="super@example.com"
7179	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7273
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7272	    def setUpTestData(cls):
7273	        cls.superuser = User.objects.create_superuser(
7274	            username="super", password="secret", email="super@example.com"
7275	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7276
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7275	        )
7276	        cls.adduser = User.objects.create_user(
7277	            username="adduser", password="secret", is_staff=True
7278	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7279
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7278	        )
7279	        cls.changeuser = User.objects.create_user(
7280	            username="changeuser", password="secret", is_staff=True
7281	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7500
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7499	    def setUpTestData(cls):
7500	        cls.superuser = User.objects.create_superuser(
7501	            username="super", password="secret", email="super@example.com"
7502	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7535
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7534	    def setUpTestData(cls):
7535	        cls.superuser = User.objects.create_superuser(
7536	            username="super", password="secret", email="super@example.com"
7537	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7684
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7683	    def setUpTestData(cls):
7684	        cls.superuser = User.objects.create_superuser(
7685	            username="super", password="secret", email="super@example.com"
7686	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7773
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7772	    def setUpTestData(cls):
7773	        cls.superuser = User.objects.create_superuser(
7774	            username="super", password="secret", email="super@example.com"
7775	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7791
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7790	    def setUpTestData(cls):
7791	        cls.superuser = User.objects.create_superuser(
7792	            username="super", password="secret", email="super@example.com"
7793	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:7949
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
7948	    def setUpTestData(cls):
7949	        cls.superuser = User.objects.create_superuser(
7950	            username="super", password="secret", email="super@example.com"
7951	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8025
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8024	    def setUpTestData(cls):
8025	        cls.superuser = User.objects.create_superuser(
8026	            username="super", password="secret", email="super@example.com"
8027	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8060
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8059	    def setUpTestData(cls):
8060	        cls.superuser = User.objects.create_superuser(
8061	            username="super", password="secret", email="super@example.com"
8062	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8126
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8125	    def setUpTestData(cls):
8126	        cls.superuser = User.objects.create_superuser(
8127	            username="super", password="secret", email="super@example.com"
8128	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8129
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8128	        )
8129	        cls.joepublicuser = User.objects.create_user(
8130	            username="joepublic", password="secret"
8131	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8332
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8331	    def test_change_view_close_link(self):
8332	        viewuser = User.objects.create_user(
8333	            username="view", password="secret", is_staff=True
8334	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8432
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8431	    def setUpTestData(cls):
8432	        cls.superuser = User.objects.create_superuser(
8433	            username="super", password="secret", email="super@example.com"
8434	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8478
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8477	    def setUpTestData(cls):
8478	        cls.superuser = User.objects.create_superuser(
8479	            username="super", password="secret", email="super@example.com"
8480	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8680
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8679	    def setUpTestData(cls):
8680	        cls.superuser = User.objects.create_superuser(
8681	            username="super", password="secret", email="super@example.com"
8682	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8747
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8746	    def setUpTestData(cls):
8747	        cls.superuser = User.objects.create_superuser(
8748	            username="super", password="secret", email="super@example.com"
8749	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8797
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8796	    def setUpTestData(cls):
8797	        cls.staff_user = User.objects.create_user(
8798	            username="staff",
8799	            password="secret",
8800	            email="staff@example.com",
8801	            is_staff=True,
8802	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_views/tests.py:8803
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
8802	        )
8803	        cls.non_staff_user = User.objects.create_user(
8804	            username="user",
8805	            password="secret",
8806	            email="user@example.com",
8807	            is_staff=False,
8808	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:59
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
58	    def setUpTestData(cls):
59	        cls.superuser = User.objects.create_superuser(
60	            username="super", password="secret", email=None
61	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:62
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
61	        )
62	        cls.u2 = User.objects.create_user(username="testser", password="secret")
63	        Car.objects.create(owner=cls.superuser, make="Volkswagen", model="Passat")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:974
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
973	    def setUp(self):
974	        self.u1 = User.objects.create_superuser(
975	            username="super", password="secret", email="super@example.com"
976	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:988
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
987	
988	        self.admin_login(username="super", password="secret", login_url="/")
989	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1060
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1059	
1060	        self.admin_login(username="super", password="secret", login_url="/")
1061	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1087
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1086	
1087	        self.admin_login(username="super", password="secret", login_url="/")
1088	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1116
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1115	
1116	        self.admin_login(username="super", password="secret", login_url="/")
1117	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1141
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1140	
1141	        self.admin_login(username="super", password="secret", login_url="/")
1142	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1193
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1192	
1193	        self.admin_login(username="super", password="secret", login_url="/")
1194	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1482
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1481	        with self.small_screen_size():
1482	            self.admin_login(username="super", password="secret", login_url="/")
1483	            self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1518
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1517	        with self.small_screen_size():
1518	            self.admin_login(username="super", password="secret", login_url="/")
1519	            self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1638
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1637	        self.school.alumni.set([self.lisa, self.peter])
1638	        self.admin_login(username="super", password="secret", login_url="/")
1639	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1669
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1668	
1669	        self.admin_login(username="super", password="secret", login_url="/")
1670	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1697
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1696	
1697	        self.admin_login(username="super", password="secret", login_url="/")
1698	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1734
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1733	
1734	        self.admin_login(username="super", password="secret", login_url="/")
1735	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1785
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1784	
1785	        self.admin_login(username="super", password="secret", login_url="/")
1786	        with self.wait_page_loaded():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/admin_widgets/tests.py:1870
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1869	
1870	        self.admin_login(username="super", password="secret", login_url="/")
1871	        self.selenium.get(

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/aggregation_regress/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import datetime
2	import pickle
3	from decimal import Decimal

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/aggregation_regress/tests.py:257
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
256	        # subselect being (erroneously) added to the GROUP BY parameters
257	        qs = Publisher.objects.extra(
258	            select={
259	                "name_of_shortest_book": shortest_book_sql,
260	            }

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/aggregation_regress/tests.py:1020
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
1019	        query = qs.query.get_compiler(qs.db).as_sql()[0]
1020	        qs2 = pickle.loads(pickle.dumps(qs))
1021	        self.assertEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/annotations/tests.py:711
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
710	                    DepartmentStore.objects.annotate(
711	                        annotation=RawSQL(sql, ()),
712	                    ).values_list("annotation", flat=True),

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:22
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
21	    async def test_aauthenticate(self):
22	        user = await aauthenticate(username="testuser", password="testpw")
23	        self.assertIsInstance(user, User)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:27
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
26	        await user.asave()
27	        self.assertIsNone(await aauthenticate(username="testuser", password="testpw"))
28	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:127
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
126	    async def test_alogout(self):
127	        await self.client.alogin(username="testuser", password="testpw")
128	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:135
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
134	    async def test_client_alogout(self):
135	        await self.client.alogin(username="testuser", password="testpw")
136	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:143
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
142	    async def test_change_password(self):
143	        await self.client.alogin(username="testuser", password="testpw")
144	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/async/test_async_auth.py:153
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
152	        self.assertEqual(
153	            await self.client.alogin(username="testuser", password=""), False
154	        )

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/async/test_async_queryset.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree
1	import json
2	import xml.etree.ElementTree
3	from datetime import datetime

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/async/test_async_queryset.py:247
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
246	                    try:
247	                        xml.etree.ElementTree.fromstring(result)
248	                    except xml.etree.ElementTree.ParseError as e:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_admin_multidb.py:40
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
39	            Router.target_db = db
40	            cls.superusers[db] = User.objects.create_superuser(
41	                username="admin",
42	                password="something",
43	                email="test@test.org",
44	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:467
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
466	        username = getattr(self.user, self.UserModel.USERNAME_FIELD)
467	        authenticate(username=username, password="test")
468	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:471
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
470	        CountingMD5PasswordHasher.calls = 0
471	        authenticate(username="no_such_user", password="test")
472	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:485
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
484	        username = getattr(self.user, self.UserModel.USERNAME_FIELD)
485	        await aauthenticate(username=username, password="test")
486	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:489
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
488	        CountingMD5PasswordHasher.calls = 0
489	        await aauthenticate(username="no_such_user", password="test")
490	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:520
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
519	        )
520	        self.superuser = User.objects.create_superuser(
521	            username="test2",
522	            email="test2@example.com",
523	            password="test",
524	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:549
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
548	        """
549	        user = CustomUserWithoutIsActiveField.objects._create_user(
550	            username="test",
551	            email="test@example.com",
552	            password="test",
553	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:554
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
553	        )
554	        self.assertEqual(authenticate(username="test", password="test"), user)
555	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:561
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
560	        """
561	        user = await CustomUserWithoutIsActiveField.objects._acreate_user(
562	            username="test",
563	            email="test@example.com",
564	            password="test",
565	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:566
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
565	        )
566	        self.assertEqual(await aauthenticate(username="test", password="test"), user)
567	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:590
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
589	    def create_users(self):
590	        self.user = ExtensionUser._default_manager.create_user(
591	            username="test",
592	            email="test@example.com",
593	            password="test",
594	            date_of_birth=date(2006, 4, 25),
595	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:596
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
595	        )
596	        self.superuser = ExtensionUser._default_manager.create_superuser(
597	            username="test2",
598	            email="test2@example.com",
599	            password="test",
600	            date_of_birth=date(1976, 11, 8),
601	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:617
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
616	    def create_users(self):
617	        self.user = CustomPermissionsUser._default_manager.create_user(
618	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
619	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:620
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
619	        )
620	        self.superuser = CustomPermissionsUser._default_manager.create_superuser(
621	            email="test2@example.com", password="test", date_of_birth=date(1976, 11, 8)
622	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:633
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
632	    def test_authenticate(self):
633	        test_user = CustomUser._default_manager.create_user(
634	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
635	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:636
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
635	        )
636	        authenticated_user = authenticate(email="test@example.com", password="test")
637	        self.assertEqual(test_user, authenticated_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:640
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
639	    async def test_aauthenticate(self):
640	        test_user = await CustomUser._default_manager.acreate_user(
641	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
642	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:643
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
642	        )
643	        authenticated_user = await aauthenticate(
644	            email="test@example.com", password="test"
645	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:655
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
654	        """
655	        user = UUIDUser.objects.create_user(username="uuid", password="test")
656	        self.assertTrue(self.client.login(username="uuid", password="test"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:656
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
655	        user = UUIDUser.objects.create_user(username="uuid", password="test")
656	        self.assertTrue(self.client.login(username="uuid", password="test"))
657	        self.assertEqual(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:663
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
662	        """See test_login()"""
663	        user = await UUIDUser.objects.acreate_user(username="uuid", password="test")
664	        self.assertTrue(await self.client.alogin(username="uuid", password="test"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:664
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
663	        user = await UUIDUser.objects.acreate_user(username="uuid", password="test")
664	        self.assertTrue(await self.client.alogin(username="uuid", password="test"))
665	        session_key = await self.client.session.aget(SESSION_KEY)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:924
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
923	        "user is not authenticated after a backend raises permission denied #2550"
924	        self.assertIsNone(authenticate(username="test", password="test"))
925	        # user_login_failed signal is sent.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:933
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
932	    async def test_aauthenticate_permission_denied(self):
933	        self.assertIsNone(await aauthenticate(username="test", password="test"))
934	        # user_login_failed signal is sent.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:942
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
941	    def test_authenticates(self):
942	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
943	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:947
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
946	        self.assertEqual(
947	            await aauthenticate(username="test", password="test"), self.user1
948	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:1092
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1091	        with self.assertRaises(TypeError):
1092	            authenticate(username="test", password="test")
1093	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:1271
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1270	        """
1271	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
1272	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:1280
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1279	    def test_skips_backends_with_decorated_method(self):
1280	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
1281	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_auth_backends.py:1294
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1293	    def setUp(self):
1294	        self.client.login(username="test", password="test")
1295	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:157
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
156	        )
157	        self.client.login(username="testuser", password="testpw")
158	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:168
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
167	        )
168	        self.client.login(username="testuser", password="testpw")
169	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:172
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
171	        prev_session_key = request.session.session_key
172	        with override_settings(
173	            SECRET_KEY="newsecret",
174	            SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],
175	        ):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:182
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
181	        # The session hash should be updated using the current secret.
182	        with override_settings(SECRET_KEY="newsecret"):
183	            user = get_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:191
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
190	        )
191	        await self.client.alogin(username="testuser", password="testpw")
192	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:195
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
194	        prev_session_key = request.session.session_key
195	        with override_settings(
196	            SECRET_KEY="newsecret",
197	            SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],
198	        ):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_basic.py:205
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
204	        # The session hash should be updated using the current secret.
205	        with override_settings(SECRET_KEY="newsecret"):
206	            user = await aget_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:77
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
76	    def setUpTestData(cls):
77	        cls.superuser = User.objects.create_superuser(
78	            username="super", password="secret", email="super@example.com"
79	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:100
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
99	    def test_perms_attrs(self):
100	        u = User.objects.create_user(username="normal", password="secret")
101	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:114
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
113	    def test_perm_in_perms_attrs(self):
114	        u = User.objects.create_user(username="normal", password="secret")
115	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:121
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
120	        )
121	        self.client.login(username="normal", password="secret")
122	        response = self.client.get("/auth_processor_perm_in_perms/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:139
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
138	        # tests.
139	        self.client.login(username="super", password="secret")
140	        user = authenticate(username="super", password="secret")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_context_processors.py:140
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
139	        self.client.login(username="super", password="secret")
140	        user = authenticate(username="super", password="secret")
141	        response = self.client.get("/auth_processor_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_decorators.py:158
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
157	    def setUpTestData(cls):
158	        cls.user = models.User.objects.create(username="joe", password="qwerty")
159	        # Add permissions auth.add_customuser and auth.change_customuser

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_decorators.py:323
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
322	    def setUpTestData(cls):
323	        cls.user_pass = models.User.objects.create(username="joe", password="qwerty")
324	        cls.user_deny = models.User.objects.create(username="jim", password="qwerty")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_decorators.py:324
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
323	        cls.user_pass = models.User.objects.create(username="joe", password="qwerty")
324	        cls.user_deny = models.User.objects.create(username="jim", password="qwerty")
325	        models.Group.objects.create(name="Joe group")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:49
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
48	    def setUpTestData(cls):
49	        cls.u1 = User.objects.create_user(
50	            username="testclient", password="password", email="testclient@example.com"
51	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:52
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
51	        )
52	        cls.u2 = User.objects.create_user(
53	            username="inactive", password="password", is_active=False
54	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:55
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
54	        )
55	        cls.u3 = User.objects.create_user(username="staff", password="password")
56	        cls.u4 = User.objects.create(username="empty_password", password="")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:56
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
55	        cls.u3 = User.objects.create_user(username="staff", password="password")
56	        cls.u4 = User.objects.create(username="empty_password", password="")
57	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '$'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:57
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
56	        cls.u4 = User.objects.create(username="empty_password", password="")
57	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")
58	        cls.u6 = User.objects.create(username="unknown_password", password="foo$bar")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo$bar'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:58
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
57	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")
58	        cls.u6 = User.objects.create(username="unknown_password", password="foo$bar")
59	        cls.u7 = User.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:202
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
201	        self.assertNotEqual(omega_username, ohm_username)
202	        User.objects.create_user(username=omega_username, password="pwd")
203	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:443
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
442	
443	        ExtensionUser.objects.create_user(
444	            username="testclient",
445	            password="password",
446	            email="testclient@example.com",
447	            date_of_birth=datetime.date(1984, 3, 5),
448	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:606
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
605	    def test_unicode_username(self):
606	        User.objects.create_user(username="Σαρα", password="pwd")
607	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_forms.py:686
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
685	
686	        user = IntegerUsernameUser.objects.create_user(username=0, password="pwd")
687	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'letmein'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_hashers.py:486
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
485	            ("foo", make_password(password=None), None),  # unusable encoded
486	            ("letmein", make_password(password="letmein"), ValueError),  # valid encoded
487	        ]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'letmein'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_hashers.py:499
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
498	            ("foo", make_password(password=None), None),  # unusable encoded
499	            ("letmein", make_password(password="letmein"), ValueError),  # valid encoded
500	        ]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_login.py:11
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
10	    def setUpTestData(cls):
11	        cls.user = User.objects.create_user(username="testuser", password="password")
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/auth_tests/test_management.py:61
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
60	            def mock_input(prompt):
61	                assert "__proxy__" not in prompt
62	                response = None

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_management.py:169
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
168	    def setUpTestData(cls):
169	        cls.user = User.objects.create_user(username="joe", password="qwerty")
170	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_management.py:191
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
190	        username = getpass.getuser()
191	        User.objects.create_user(username=username, password="qwerty")
192	        call_command("changepassword", stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_management.py:252
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
251	        # 'Julia' with accented 'u':
252	        User.objects.create_user(username="J\xfalia", password="qwerty")
253	        call_command("changepassword", username="J\xfalia", stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_management.py:266
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
265	        """
266	        user = User.objects.db_manager("other").create_user(
267	            username="joe", password="qwerty"
268	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test_password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_middleware.py:124
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
123	        ]
124	        self.client.login(username="test_user", password="test_password")
125	        for path in paths:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:57
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
56	    def test_stacked_mixins_success(self):
57	        user = models.User.objects.create(username="joe", password="qwerty")
58	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:74
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
73	    def test_stacked_mixins_missing_permission(self):
74	        user = models.User.objects.create(username="joe", password="qwerty")
75	        perms = models.Permission.objects.filter(codename__in=("add_customuser",))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:89
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
88	    def test_access_mixin_permission_denied_response(self):
89	        user = models.User.objects.create(username="joe", password="qwerty")
90	        # Authenticated users receive PermissionDenied.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:118
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
117	    def test_stacked_mixins_not_logged_in(self):
118	        user = models.User.objects.create(username="joe", password="qwerty")
119	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:218
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
217	    def setUpTestData(cls):
218	        cls.user = models.User.objects.create(username="joe", password="qwerty")
219	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_mixins.py:247
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
246	    def setUpTestData(cls):
247	        cls.user = models.User.objects.create(username="joe", password="qwerty")
248	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:160
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
159	        ):
160	            User.objects.create_superuser(
161	                username="test",
162	                email="test@test.com",
163	                password="test",
164	                is_superuser=False,
165	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:171
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
170	        ):
171	            await User.objects.acreate_superuser(
172	                username="test",
173	                email="test@test.com",
174	                password="test",
175	                is_superuser=False,
176	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:180
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
179	        with self.assertRaisesMessage(ValueError, "Superuser must have is_staff=True."):
180	            User.objects.create_superuser(
181	                username="test",
182	                email="test@test.com",
183	                password="test",
184	                is_staff=False,
185	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:189
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
188	        with self.assertRaisesMessage(ValueError, "Superuser must have is_staff=True."):
189	            await User.objects.acreate_superuser(
190	                username="test",
191	                email="test@test.com",
192	                password="test",
193	                is_staff=False,
194	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secure'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:199
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
198	            UserModel = apps.get_model("auth", "User")
199	            user = UserModel.objects.create_user("user1", password="secure")
200	            self.assertIsInstance(user, UserModel)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'some-gibbberish'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:227
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
226	        """
227	        self.assertIs(User(password="some-gibbberish").has_usable_password(), True)
228	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:286
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
285	    def test_user_clean_normalize_email(self):
286	        user = User(username="user", password="foo", email="foo@BAR.com")
287	        user.clean()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:294
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
293	        """
294	        user = User.objects.create_user(username="user", password="foo")
295	        user.set_password("bar")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:310
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
309	        """
310	        user = User.objects.create_user(username="user", password="foo")
311	        initial_password = user.password

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_models.py:331
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
330	    async def test_acheck_password_upgrade(self):
331	        user = await User.objects.acreate_user(username="user", password="foo")
332	        initial_password = user.password

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:250
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
249	        # authenticated via another backend
250	        User.objects.create_user(username="modeluser", password="foo")
251	        self.client.login(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:251
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
250	        User.objects.create_user(username="modeluser", password="foo")
251	        self.client.login(username="modeluser", password="foo")
252	        authenticate(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:252
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
251	        self.client.login(username="modeluser", password="foo")
252	        authenticate(username="modeluser", password="foo")
253	        response = self.client.get("/remote_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:269
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
268	        # authenticated via another backend
269	        await User.objects.acreate_user(username="modeluser", password="foo")
270	        await self.async_client.alogin(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:270
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
269	        await User.objects.acreate_user(username="modeluser", password="foo")
270	        await self.async_client.alogin(username="modeluser", password="foo")
271	        await aauthenticate(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_remote_user.py:271
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
270	        await self.async_client.alogin(username="modeluser", password="foo")
271	        await aauthenticate(username="modeluser", password="foo")
272	        response = await self.async_client.get("/remote_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:15
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
14	    def setUpTestData(cls):
15	        cls.u1 = User.objects.create_user(username="testclient", password="password")
16	        cls.u3 = User.objects.create_user(username="staff", password="password")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:16
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
15	        cls.u1 = User.objects.create_user(username="testclient", password="password")
16	        cls.u3 = User.objects.create_user(username="staff", password="password")
17	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:43
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
42	        # Only a successful login will trigger the success signal.
43	        self.client.login(username="testclient", password="bad")
44	        self.assertEqual(len(self.logged_in), 0)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:52
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
51	        # Like this:
52	        self.client.login(username="testclient", password="password")
53	        self.assertEqual(len(self.logged_in), 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:67
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
66	    def test_logout(self):
67	        self.client.login(username="testclient", password="password")
68	        self.client.post("/logout/next_page/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_signals.py:85
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
84	    def test_failed_login_without_request(self):
85	        authenticate(username="testclient", password="bad")
86	        self.assertIsNone(self.login_failed[0]["request"])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_templates.py:28
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
27	        user = User.objects.create_user("jsmith", "jsmith@example.com", "pass")
28	        user = authenticate(username=user.username, password="pass")
29	        request = cls.request_factory.get("/somepath/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_tokens.py:50
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
49	            with self.subTest(model=model.__qualname__, email=email):
50	                user = model.objects.create_user(
51	                    "changeemailuser",
52	                    email=email,
53	                    password="testpw",
54	                )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_tokens.py:136
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
135	
136	    @override_settings(SECRET_KEY="")
137	    def test_secret_lazy_validation(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_tokens.py:154
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
153	
154	    @override_settings(
155	        SECRET_KEY="secret",
156	        SECRET_KEY_FALLBACKS=["oldsecret"],
157	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_tokens.py:166
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
165	
166	    @override_settings(
167	        SECRET_KEY="secret",
168	        SECRET_KEY_FALLBACKS=["oldsecret"],
169	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_validators.py:164
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
163	    def test_validate(self):
164	        user = User.objects.create_user(
165	            username="testclient",
166	            password="password",
167	            email="testclient@example.com",
168	            first_name="Test",
169	            last_name="Client",
170	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_validators.py:235
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
234	
235	        user = User.objects.create_user(
236	            username="testclient",
237	            password="password",
238	            email="testclient@example.com",
239	            first_name="Test",
240	            last_name="Client",
241	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_validators.py:253
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
252	
253	        user = User.objects.create_user(
254	            username="testclient",
255	            password="password",
256	            email="testclient@example.com",
257	            first_name="Test",
258	            last_name="Client",
259	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:72
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
71	    def setUpTestData(cls):
72	        cls.u1 = User.objects.create_user(
73	            username="testclient", password="password", email="testclient@example.com"
74	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:75
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
74	        )
75	        cls.u3 = User.objects.create_user(
76	            username="staff", password="password", email="staffmember@example.com"
77	        )

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:79
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html
78	
79	    def login(self, username="testclient", password="password", url="/login/"):
80	        response = self.client.post(
81	            url,
82	            {
83	                "username": username,
84	                "password": password,
85	            },
86	        )
87	        self.assertIn(SESSION_KEY, self.client.session)
88	        return response
89	
90	    def logout(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:547
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
546	        # instead of fixture
547	        UUIDUser.objects.create_user(
548	            email=self.user_email,
549	            username="foo",
550	            password="foo",
551	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:622
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
621	        self.fail_login()
622	        self.login(password="password1")
623	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foobar'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:916
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
915	
916	        self.login(password="foobar")
917	        self.assertNotEqual(original_session_key, self.client.session.session_key)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:1556
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1555	        self.logout()
1556	        self.login(password="password1")
1557	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:1578
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1577	        # No password change yet.
1578	        self.login(password="password1")
1579	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:1600
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1599	        with self.assertRaises(AssertionError):
1600	            self.login(password="password1")
1601	        self.admin.refresh_from_db()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:1723
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1722	    def test_admin_password_change(self):
1723	        u = UUIDUser.objects.create_superuser(
1724	            username="uuid", email="foo@bar.com", password="test"
1725	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/test_views.py:1726
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1725	        )
1726	        self.assertTrue(self.client.login(username="uuid", password="test"))
1727	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/auth_tests/urls.py:24
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
23	    def __init__(self, request, *args, **kwargs):
24	        assert isinstance(request, HttpRequest)
25	        super().__init__(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'set-passwordcustom'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/auth_tests/urls.py:183
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
182	        "reset/custom/token/<uidb64>/<token>/",
183	        views.PasswordResetConfirmView.as_view(reset_url_token="set-passwordcustom"),
184	    ),

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/backends/mysql/test_creation.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import subprocess
2	import unittest
3	from io import StringIO

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/backends/tests.py:87
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
86	        """last_executed_query() returns a string."""
87	        data = RawData.objects.filter(raw_data=b"\x00\x46  \xFE").extra(
88	            select={"föö": 1}
89	        )

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/tests/backends/tests.py:494
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
493	                connection.close()
494	            except Exception:
495	                pass

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/builtin_server/tests.py:24
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
23	
24	        assert isinstance(data, bytes), "write() argument must be bytestring"
25	
26	        if not self.status:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/cache/tests.py:6
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
5	import os
6	import pickle
7	import re

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   Location: ./django/tests/cache/tests.py:1574
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
1573	            cache.set("small_value", large_value)
1574	        except Exception:
1575	            # Most clients (e.g. pymemcache or pylibmc) raise when the value is

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/check_framework/test_security.py:419
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
418	
419	    @override_settings(SECRET_KEY="")
420	    def test_empty_secret_key(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/composite_pk/test_update.py:120
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
119	    def test_update_token_by_tenant_name(self):
120	        result = Token.objects.filter(tenant__name="A").update(secret="bar")
121	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/csrf_tests/tests.py:422
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
421	        )
422	        self._check_bad_or_missing_token(
423	            expected,
424	            meta_token=16 * "a",
425	            token_header="HTTP_X_CSRFTOKEN_CUSTOMIZED",
426	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/csrf_tests/tests.py:464
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
463	        """
464	        req = self._get_POST_csrf_cookie_request(
465	            meta_token=self._csrf_id_token,
466	            token_header="HTTP_X_CSRFTOKEN_CUSTOMIZED",
467	        )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/dbshell/test_mysql.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
2	import signal
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/dbshell/test_mysql.py:222
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
221	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
222	            subprocess.run(args, check=True, env=env)
223	        self.assertNotIn("somepassword", str(ctx.exception))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/dbshell/test_postgresql.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
2	import signal
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/dbshell/test_postgresql.py:186
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
185	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
186	            subprocess.run(args, check=True, env=env)
187	        self.assertNotIn("somepassword", str(ctx.exception))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/dbshell/test_sqlite.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import subprocess
2	from pathlib import Path
3	from unittest import mock, skipUnless

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/defer/tests.py:87
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
86	        qs = Primary.objects.all()
87	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
88	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/defer/tests.py:88
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
87	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
88	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)
89	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/expressions/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import datetime
2	import pickle
3	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/expressions/tests.py:1007
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
1006	        expr.convert_value  # populate cached property
1007	        self.assertEqual(pickle.loads(pickle.dumps(expr)), expr)
1008	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:12
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
11	    def setUpTestData(cls):
12	        cls.u = User.objects.create_user(
13	            username="fred", password="secret", email="fred@example.com"
14	        )

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:37
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
36	        # Queryset to match most recent revision:
37	        qs = RevisionableModel.objects.extra(
38	            where=[
39	                "%(table)s.id IN "
40	                "(SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)"
41	                % {
42	                    "table": RevisionableModel._meta.db_table,
43	                }

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:80
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
79	        )
80	        qs = qs.extra(select={"beta": 4})
81	        qs = qs.extra(select={"alpha": "%s"}, select_params=[5])

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:157
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
156	        self.assertSequenceEqual(
157	            User.objects.filter(pk=self.u.id)
158	            .extra(select={"extra_field": 1})
159	            .distinct(),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:163
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
162	        self.assertSequenceEqual(
163	            User.objects.filter(pk=self.u.id).extra(
164	                select={"extra_field": 1}, order_by=["extra_field"]
165	            ),
166	            [self.u],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:169
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
168	        self.assertSequenceEqual(
169	            User.objects.filter(pk=self.u.id)
170	            .extra(select={"extra_field": 1}, order_by=["extra_field"])
171	            .distinct(),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:397
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
396	        self.assertEqual(
397	            list(TestObject.objects.extra(select={"extra": 1}).values("pk")),
398	            [{"pk": obj.pk}],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:403
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
402	            TestObject.objects.filter(
403	                pk__in=TestObject.objects.extra(select={"extra": 1}).values("pk")
404	            ),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:409
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
408	        self.assertEqual(
409	            list(TestObject.objects.values("pk").extra(select={"extra": 1})),
410	            [{"pk": obj.pk}],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/extra_regress/tests.py:415
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
414	            TestObject.objects.filter(
415	                pk__in=TestObject.objects.values("pk").extra(select={"extra": 1})
416	            ),

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/tests/file_storage/models.py:47
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
46	        # to make sure it only gets called once.
47	        return "%s/%s" % (random.randint(100, 999), filename)
48	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_storage/tests.py:1253
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
1252	        """
1253	        file_like_object = urlopen(self.live_server_url + "/")
1254	        f = File(file_like_object)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_storage/tests.py:1257
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
1256	
1257	        remote_file = urlopen(self.live_server_url + "/")
1258	        with self.storage.open(stored_filename) as stored_file:

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_uploads/tests.py:115
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
114	                try:
115	                    post_data[key + "_hash"] = hashlib.sha1(
116	                        post_data[key].read()
117	                    ).hexdigest()

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_uploads/tests.py:120
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
119	                except AttributeError:
120	                    post_data[key + "_hash"] = hashlib.sha1(
121	                        post_data[key].encode()
122	                    ).hexdigest()

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_uploads/views.py:50
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
49	        if isinstance(value, UploadedFile):
50	            new_hash = hashlib.sha1(value.read()).hexdigest()
51	        else:

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/file_uploads/views.py:52
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
51	        else:
52	            new_hash = hashlib.sha1(value.encode()).hexdigest()
53	        if new_hash != submitted_hash:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/foreign_object/tests.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
2	import datetime
3	import pickle
4	from operator import attrgetter

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/foreign_object/tests.py:695
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
694	        self.assertIn("path_infos", foreign_object_rel.__dict__)
695	        foreign_object_rel_restored = pickle.loads(pickle.dumps(foreign_object_rel))
696	        self.assertNotIn("path_infos", foreign_object_rel_restored.__dict__)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/foreign_object/tests.py:712
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
711	        self.assertIn("reverse_path_infos", foreign_object.__dict__)
712	        foreign_object_restored = pickle.loads(pickle.dumps(foreign_object))
713	        self.assertIn("path_infos", foreign_object_restored.__dict__)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/forms_tests/field_tests/test_booleanfield.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	
3	from django.core.exceptions import ValidationError
4	from django.forms import BooleanField

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/field_tests/test_booleanfield.py:42
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
41	    def test_boolean_picklable(self):
42	        self.assertIsInstance(pickle.loads(pickle.dumps(BooleanField())), BooleanField)
43	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/forms_tests/field_tests/test_filefield.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	import unittest
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/field_tests/test_filefield.py:121
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
120	    def test_file_picklable(self):
121	        self.assertIsInstance(pickle.loads(pickle.dumps(FileField())), FileField)
122	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_error_messages.py:243
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
242	                    return ""
243	                return mark_safe(
244	                    '<div class="error">%s</div>'
245	                    % "".join("<p>%s</p>" % e for e in self)
246	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_error_messages.py:243
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
242	                    return ""
243	                return mark_safe(
244	                    '<div class="error">%s</div>'
245	                    % "".join("<p>%s</p>" % e for e in self)
246	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_forms.py:1395
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
1394	            special_name = CharField(label="<em>Special</em> Field")
1395	            special_safe_name = CharField(label=mark_safe("<em>Special</em> Field"))
1396	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_forms.py:1404
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
1403	                raise ValidationError(
1404	                    mark_safe(
1405	                        "'<b>%s</b>' is a safe string"
1406	                        % self.cleaned_data["special_safe_name"]
1407	                    )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_forms.py:1404
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
1403	                raise ValidationError(
1404	                    mark_safe(
1405	                        "'<b>%s</b>' is a safe string"
1406	                        % self.cleaned_data["special_safe_name"]
1407	                    )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_forms.py:4092
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
4091	            (("custom&",), {}, '<%(tag)s for="id_field">custom&amp;:</%(tag)s>'),
4092	            ((mark_safe("custom&"),), {}, '<%(tag)s for="id_field">custom&:</%(tag)s>'),
4093	            # Passing attrs to add extra attributes on the <label>

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_utils.py:149
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
148	        self.assertHTMLEqual(
149	            str(ErrorList([mark_safe(example)])),
150	            '<ul class="errorlist"><li>Example of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/tests/test_utils.py:160
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
159	        self.assertHTMLEqual(
160	            str(ErrorDict({"name": mark_safe(example)})),
161	            '<ul class="errorlist"><li>nameExample of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/widget_tests/test_radioselect.py:259
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
258	    def test_choices_escaping(self):
259	        choices = (("bad", "you & me"), ("good", mark_safe("you &gt; me")))
260	        html = """

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/widget_tests/test_select.py:202
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
201	    def test_choices_escaping(self):
202	        choices = (("bad", "you & me"), ("good", mark_safe("you &gt; me")))
203	        self.check_html(

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/widget_tests/test_textarea.py:59
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
58	            "msg",
59	            mark_safe("pre &quot;quoted&quot; value"),
60	            html=(

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/forms_tests/widget_tests/test_textinput.py:109
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
108	    def test_attrs_safestring(self):
109	        widget = TextInput(attrs={"onBlur": mark_safe("function('foo')")})
110	        self.check_html(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/generic_inline_admin/tests.py:26
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
25	    def setUpTestData(cls):
26	        cls.superuser = User.objects.create_superuser(
27	            username="super", password="secret", email="super@example.com"
28	        )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/generic_views/test_base.py:262
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
261	            def dispatch(self, request, *args, **kwargs):
262	                assert hasattr(self, "attr")
263	                return super().dispatch(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/gdal_tests/test_geom.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import json
2	import pickle
3	
4	from django.contrib.gis.gdal import (

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/gdal_tests/test_geom.py:495
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
494	        g1 = OGRGeometry("LINESTRING(1 1 1,2 2 2,3 3 3)", "WGS84")
495	        g2 = pickle.loads(pickle.dumps(g1))
496	        self.assertEqual(g1, g2)

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
1	from xml.dom import minidom
2	
3	from django.conf import settings
4	from django.contrib.sites.models import Site

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:28
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
27	        # Uses `GEOSGeometry` in `item_geometry`
28	        doc1 = minidom.parseString(self.client.get("/feeds/rss1/").content)
29	        # Uses a 2-tuple in `item_geometry`

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:30
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
29	        # Uses a 2-tuple in `item_geometry`
30	        doc2 = minidom.parseString(self.client.get("/feeds/rss2/").content)
31	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:66
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
65	        "Testing geographic feeds using GeoRSS over Atom."
66	        doc1 = minidom.parseString(self.client.get("/feeds/atom1/").content)
67	        doc2 = minidom.parseString(self.client.get("/feeds/atom2/").content)

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:67
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
66	        doc1 = minidom.parseString(self.client.get("/feeds/atom1/").content)
67	        doc2 = minidom.parseString(self.client.get("/feeds/atom2/").content)
68	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_feeds.py:91
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
90	        "Testing geographic feeds using W3C Geo."
91	        doc = minidom.parseString(self.client.get("/feeds/w3cgeo1/").content)
92	        feed = doc.firstChild

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_sitemaps.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
2	from io import BytesIO
3	from xml.dom import minidom
4	
5	from django.conf import settings

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_sitemaps.py:30
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
29	        for kml_type in ("kml", "kmz"):
30	            doc = minidom.parseString(
31	                self.client.get("/sitemaps/%s.xml" % kml_type).content
32	            )

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_sitemaps.py:54
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
53	                if kml_type == "kml":
54	                    kml_doc = minidom.parseString(self.client.get(kml_url).content)
55	                elif kml_type == "kmz":

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geoapp/test_sitemaps.py:61
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
60	                        self.assertEqual("doc.kml", zf.filelist[0].filename)
61	                        kml_doc = minidom.parseString(zf.read("doc.kml"))
62	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/geos_tests/test_geos.py:5
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
4	import math
5	import pickle
6	import random

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/geos_tests/test_geos.py:995
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
994	                pnt = mp[i]
995	                new = Point(random.randint(21, 100), random.randint(21, 100))
996	                # Testing the assignment

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/tests/gis_tests/geos_tests/test_geos.py:995
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
994	                pnt = mp[i]
995	                new = Point(random.randint(21, 100), random.randint(21, 100))
996	                # Testing the assignment

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/gis_tests/geos_tests/test_geos.py:1370
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
1369	            s1 = pickle.dumps(geom)
1370	            g1 = pickle.loads(s1)
1371	            self.assertEqual(geom, g1)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/handlers/tests_custom_error_handlers.py:15
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
14	        # TemplateResponse-based exception response.
15	        assert response.content
16	        return response

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/httpwrappers/tests.py:4
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
3	import os
4	import pickle
5	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/httpwrappers/tests.py:230
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
229	        q = QueryDict()
230	        q1 = pickle.loads(pickle.dumps(q, 2))
231	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/httpwrappers/tests.py:233
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
232	        q = QueryDict("a=b&c=d")
233	        q1 = pickle.loads(pickle.dumps(q, 2))
234	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/httpwrappers/tests.py:236
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
235	        q = QueryDict("a=b&c=d&a=1")
236	        q1 = pickle.loads(pickle.dumps(q, 2))
237	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/httpwrappers/tests.py:973
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
972	        for proto in range(pickle.HIGHEST_PROTOCOL + 1):
973	            C1 = pickle.loads(pickle.dumps(C, protocol=proto))
974	            self.assertEqual(C1.output(), expected_output)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/humanize_tests/tests.py:511
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
510	        result_list_with_tz_support = result_list[:]
511	        assert result_list_with_tz_support[-4] == "2\xa0days, 6\xa0hours from now"
512	        result_list_with_tz_support[-4] == "2\xa0days, 5\xa0hours from now"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with run module.
   Severity: Low   Confidence: High
   Location: ./django/tests/i18n/test_compilation.py:7
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
6	from pathlib import Path
7	from subprocess import run
8	from unittest import mock

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/i18n/test_compilation.py:269
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
268	            "django.core.management.utils.run",
269	            lambda *args, **kwargs: run(*args, env=env, **kwargs),
270	        ):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/i18n/tests.py:5
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
4	import os
5	import pickle
6	import re

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:255
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
254	        self.assertEqual(str(s1), "test")
255	        s2 = pickle.loads(pickle.dumps(s1))
256	        self.assertEqual(str(s2), "test")

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:392
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
391	        self.assertEqual(s1 % 8, "8 good results")
392	        s2 = pickle.loads(pickle.dumps(s1))
393	        self.assertEqual(s2 % 1, "1 good result")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:412
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
411	            self.assertEqual("", gettext(""))
412	            s = mark_safe("")
413	            self.assertEqual(s, gettext(s))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:423
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
422	        trans_real._translations = {}
423	        s1 = mark_safe("Password")
424	        s2 = mark_safe("May")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:424
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
423	        s1 = mark_safe("Password")
424	        s2 = mark_safe("May")
425	        with translation.override("de", deactivate=True):

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:430
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
429	        self.assertEqual("Passworda", s1 + SafeString("a"))
430	        self.assertEqual("Passworda", s1 + mark_safe("a"))
431	        self.assertEqual("aPassword", mark_safe("a") + s1)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:431
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
430	        self.assertEqual("Passworda", s1 + mark_safe("a"))
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:432
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))
433	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/i18n/tests.py:432
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))
433	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/inline_formsets/tests.py:207
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
206	            def __init__(self, *args, **kwargs):
207	                assert "poet" in self._meta.fields
208	                super().__init__(*args, **kwargs)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/lookup/tests.py:409
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
408	        self.assertSequenceEqual(
409	            Article.objects.filter(id=self.a1.id).extra(select=data).values(*data),
410	            [

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:1908
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1907	        """
1908	        conn = mail.get_connection(username="", password="")
1909	        conn.close()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:1917
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1916	        closed = [False]
1917	        conn = mail.get_connection(username="", password="")
1918	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2179
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2178	
2179	    @override_settings(
2180	        EMAIL_HOST_USER="not empty username",
2181	        EMAIL_HOST_PASSWORD="not empty password",
2182	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2193
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2192	    def test_email_authentication_override_settings(self):
2193	        backend = smtp.EmailBackend(username="username", password="password")
2194	        self.assertEqual(backend.username, "username")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2188
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2187	
2188	    @override_settings(
2189	        EMAIL_HOST_USER="not empty username",
2190	        EMAIL_HOST_PASSWORD="not empty password",
2191	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2202
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2201	    def test_email_disabled_authentication(self):
2202	        backend = smtp.EmailBackend(username="", password="")
2203	        self.assertEqual(backend.username, "")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2197
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2196	
2197	    @override_settings(
2198	        EMAIL_HOST_USER="not empty username",
2199	        EMAIL_HOST_PASSWORD="not empty password",
2200	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2211
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2210	        """
2211	        backend = smtp.EmailBackend(
2212	            username="not empty username", password="not empty password"
2213	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2224
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2223	        """
2224	        backend = smtp.EmailBackend(username="", password="")
2225	        self.assertIsNone(backend.connection)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/mail/tests.py:2488
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2487	        super().setUpClass()
2488	        cls.backend = smtp.EmailBackend(username="", password="")
2489	        cls.smtp_controller.stop()

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/many_to_one/tests.py:296
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
295	            (
296	                Article.objects.filter(reporter__first_name__exact="John").extra(
297	                    where=["many_to_one_reporter.last_name='%s'" % "Smith"]
298	                )
299	            ),
300	            [new_article1, self.a],

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/messages_tests/test_cookie.py:190
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
189	        self.assertIsInstance(
190	            self.encode_decode(mark_safe("<b>Hello Django!</b>")).message,
191	            SafeData,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/messages_tests/test_session.py:61
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
60	        storage = self.get_storage()
61	        message = Message(constants.DEBUG, mark_safe("<b>Hello Django!</b>"))
62	        set_session_data(storage, [message])

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: ./django/tests/middleware/tests.py:848
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
847	    incompressible_string = b"".join(
848	        int2byte(random.randint(0, 255)) for _ in range(500)
849	    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/migrations/test_state.py:1952
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
1951	        test_name = "related_models_app"
1952	        assert not (abstract and proxy)
1953	        meta_contents = {

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/migrations/test_writer.py:267
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
266	        try:
267	            exec(string, globals(), d)
268	        except Exception as e:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_fields/test_filefield.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import os
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_fields/test_filefield.py:162
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
161	                        dump = pickle.dumps(document)
162	                        loaded_document = pickle.loads(dump)
163	                        self.assertEqual(document.myfile, loaded_document.myfile)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_fields/test_filefield.py:181
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
180	                        myfile_dump = pickle.dumps(document.myfile)
181	                        loaded_myfile = pickle.loads(myfile_dump)
182	                        self.assertEqual(document.myfile, loaded_myfile)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_fields/test_imagefield.py:175
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
174	        """
175	        import pickle
176	
177	        p = Person(name="Joe")

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_fields/test_imagefield.py:181
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
180	
181	        loaded_p = pickle.loads(dump)
182	        self.assertEqual(p.mugshot, loaded_p.mugshot)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_fields/test_imagefield.py:189
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
188	        mugshot_dump = pickle.dumps(p.mugshot)
189	        loaded_mugshot = pickle.loads(mugshot_dump)
190	        self.assertEqual(p.mugshot, loaded_mugshot)

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/model_fields/test_jsonfield.py:438
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
437	    def test_key_transform_raw_expression(self):
438	        expr = RawSQL(self.raw_sql, ['{"x": "bar"}'])
439	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/model_fields/test_jsonfield.py:445
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
444	    def test_nested_key_transform_raw_expression(self):
445	        expr = RawSQL(self.raw_sql, ['{"x": {"y": "bar"}}'])
446	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/model_fields/test_jsonfield.py:1130
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
1129	                    "x",
1130	                    RawSQL(
1131	                        self.raw_sql,
1132	                        ['{"x": {"a": "b", "c": 1, "d": "e"}}'],
1133	                    ),

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_fields/tests.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	
3	from django import forms
4	from django.core.exceptions import ValidationError

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_forms/models.py:152
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
151	        been_here = getattr(self, "been_saved", False)
152	        assert not been_here, "save_form_data called more than once"
153	        setattr(self, "been_saved", True)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_formsets/models.py:34
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
33	        # Ensure author is always accessible in clean method
34	        assert self.author.name is not None
35	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/model_regress/test_pickle.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	
3	import django
4	from django.db import DJANGO_VERSION_PICKLE_KEY, models

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_regress/test_pickle.py:27
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
26	        with self.assertRaisesMessage(RuntimeWarning, msg):
27	            pickle.loads(pickle.dumps(p))
28	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_regress/test_pickle.py:50
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
49	        with self.assertRaisesMessage(RuntimeWarning, msg):
50	            pickle.loads(pickle.dumps(p))
51	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/model_regress/test_pickle.py:67
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
66	        self.assertEqual(m.dont_pickle, 1)
67	        reloaded = pickle.loads(dumped)
68	        self.assertFalse(hasattr(reloaded, "dont_pickle"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/modeladmin/test_actions.py:12
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
11	    def setUpTestData(cls):
12	        cls.superuser = User.objects.create_superuser(
13	            username="super", password="secret", email="super@example.com"
14	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/modeladmin/test_actions.py:21
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
20	            username = "%suser" % user_type
21	            user = User.objects.create_user(
22	                username=username, password="secret", is_staff=True
23	            )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/modeladmin/tests.py:297
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
296	        )
297	        request_band_name_filter.user = User.objects.create_superuser(
298	            username="bob", email="bob@test.com", password="test"
299	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/modeladmin/tests.py:1027
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1026	        mock_request = MockRequest()
1027	        mock_request.user = User.objects.create_superuser(
1028	            username="bob", email="bob@test.com", password="test"
1029	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/modeladmin/tests.py:1049
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1048	        mock_request = MockRequest()
1049	        mock_request.user = User.objects.create_superuser(
1050	            username="bob", email="bob@test.com", password="test"
1051	        )

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/multiple_database/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import datetime
2	import pickle
3	from io import StringIO

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/multiple_database/tests.py:2057
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
2056	            qs = Book.objects.all()
2057	            self.assertEqual(qs.db, pickle.loads(pickle.dumps(qs)).db)
2058	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'fake_hash'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/multiple_database/tests.py:2555
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
2554	    def test_reverse_one_to_one_relation(self):
2555	        user = User(username="Someone", password="fake_hash")
2556	        profile = UserProfile()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/postgres_tests/test_integration.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/postgres_tests/test_integration.py:14
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
13	        test_environ["PYTHONPATH"] = os.path.join(os.path.dirname(__file__), "../../")
14	        result = subprocess.run(
15	            [
16	                sys.executable,
17	                "-m",
18	                "django",
19	                "check",
20	                "--settings",
21	                "integration_settings",
22	            ],
23	            stdout=subprocess.DEVNULL,
24	            stderr=subprocess.PIPE,
25	            cwd=os.path.dirname(__file__),
26	            env=test_environ,
27	            encoding="utf-8",
28	        )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/queries/models.py:415
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
414	        # Ticket #23721
415	        assert False, "type checking should happen without calling model __iter__"
416	

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/queries/test_explain.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree
2	import unittest
3	import xml.etree.ElementTree
4	
5	from django.db import NotSupportedError, connection, transaction

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/test_explain.py:51
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree
50	                            try:
51	                                xml.etree.ElementTree.fromstring(result)
52	                            except xml.etree.ElementTree.ParseError as e:

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/test_qs_combinators.py:297
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
296	        qs1 = (
297	            Number.objects.filter(num=1)
298	            .extra(
299	                select={"count": 0},
300	            )

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/test_qs_combinators.py:303
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
302	        )
303	        qs2 = Number.objects.filter(num=2).extra(select={"count": 1})
304	        self.assertCountEqual(qs1.union(qs2), [(1, 0), (2, 1)])

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/test_query.py:172
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html
171	            sql = f"CASE WHEN {sql} THEN 1 ELSE 0 END"
172	        query.add_annotation(RawSQL(sql, (1,), BooleanField()), "_check")
173	        result = query.get_compiler(using=DEFAULT_DB_ALIAS).execute_sql(SINGLE)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/queries/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import datetime
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/tests.py:756
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
755	        self.assertSequenceEqual(
756	            Item.objects.datetimes("created", "day").extra(select={"a": 1}),
757	            [

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/tests.py:763
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
762	        self.assertSequenceEqual(
763	            Item.objects.extra(select={"a": 1}).datetimes("created", "day"),
764	            [

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/tests.py:854
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
853	        query = qs.query.get_compiler(qs.db).as_sql()[0]
854	        query2 = pickle.loads(pickle.dumps(qs.query))
855	        self.assertEqual(query2.get_compiler(qs.db).as_sql()[0], query)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/tests.py:860
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
859	        qs = Item.objects.defer("name", "creator")
860	        q2 = pickle.loads(pickle.dumps(qs))
861	        self.assertEqual(list(qs), list(q2))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/tests.py:862
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
861	        self.assertEqual(list(qs), list(q2))
862	        q3 = pickle.loads(pickle.dumps(qs, pickle.HIGHEST_PROTOCOL))
863	        self.assertEqual(list(qs), list(q3))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/tests.py:912
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
911	        qs = Item.objects.datetimes("created", "month")
912	        pickle.loads(pickle.dumps(qs))
913	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/tests.py:1879
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
1878	        sql = "case when %s > 2 then 1 else 0 end" % connection.ops.quote_name("rank")
1879	        qs = Ranking.objects.extra(select={"good": sql})
1880	        self.assertEqual(

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/tests.py:1897
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
1896	        sql = "case when %s > 2 then 1 else 0 end" % connection.ops.quote_name("rank")
1897	        qs = Ranking.objects.extra(select={"good": sql})
1898	        dicts = qs.values().order_by("id")

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   Location: ./django/tests/queries/tests.py:1982
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html
1981	        with self.assertRaisesMessage(ValueError, msg):
1982	            Note.objects.extra(select={crafted_alias: "1"})
1983	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queries/tests.py:2822
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
2821	        self.assertEqual(value, (72, None))
2822	        self.assertEqual(pickle.loads(pickle.dumps(value)), value)
2823	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import datetime
2	import pickle
3	
4	import django

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:27
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
26	    def assert_pickles(self, qs):
27	        self.assertEqual(list(pickle.loads(pickle.dumps(qs))), list(qs))
28	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:58
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
57	        original = Event.DoesNotExist("Doesn't exist")
58	        unpickled = pickle.loads(pickle.dumps(original))
59	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:67
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
66	        klass = Event.DoesNotExist
67	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
68	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:71
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
70	        klass = Event.MultipleObjectsReturned
71	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
72	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:76
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
75	        klass = Event.group.RelatedObjectDoesNotExist
76	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
77	        # ForwardOneToOneDescriptor

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:79
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
78	        klass = Happening.event.RelatedObjectDoesNotExist
79	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
80	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:83
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
82	        klass = Event.happening.RelatedObjectDoesNotExist
83	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
84	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:86
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
85	    def test_manager_pickle(self):
86	        pickle.loads(pickle.dumps(Happening.objects))
87	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:94
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
93	        dumped = pickle.dumps(original)
94	        reloaded = pickle.loads(dumped)
95	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:100
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
99	        dumped = pickle.dumps(original)
100	        reloaded = pickle.loads(dumped)
101	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:114
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
113	        dumped = pickle.dumps(original)
114	        reloaded = pickle.loads(dumped)
115	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:128
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
127	        dumped = pickle.dumps(original)
128	        reloaded = pickle.loads(dumped)
129	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:147
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
146	        # First pickling
147	        groups = pickle.loads(pickle.dumps(groups))
148	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:151
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
150	        # Second pickling
151	        groups = pickle.loads(pickle.dumps(groups))
152	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:161
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
160	        with self.assertNumQueries(1):
161	            events2 = pickle.loads(pickle.dumps(events))
162	        with self.assertNumQueries(0):

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:170
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
169	        )
170	        groups2 = pickle.loads(pickle.dumps(groups))
171	        self.assertSequenceEqual(groups2.filter(id__gte=0), [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:180
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
179	        with self.assertNumQueries(0):
180	            pickle.loads(pickle.dumps(groups))
181	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:193
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
192	        m2ms = M2MModel.objects.prefetch_related("groups")
193	        m2ms = pickle.loads(pickle.dumps(m2ms))
194	        self.assertSequenceEqual(m2ms, [m2m])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:206
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
205	        )
206	        groups2 = pickle.loads(pickle.dumps(groups))
207	        self.assertSequenceEqual(groups2, [group])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:217
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
216	        )
217	        groups2 = pickle.loads(pickle.dumps(groups))
218	        self.assertSequenceEqual(groups2.filter(has_event=True), [group])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:272
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
271	        ).annotate(sum_number=models.Sum("big_events__happening__number1"))
272	        groups_query = pickle.loads(pickle.dumps(groups.query))
273	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:287
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
286	        ).annotate(count_groups=models.Count("first_m2mmodels__groups"))
287	        groups_query = pickle.loads(pickle.dumps(groups.query))
288	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:300
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
299	        reloaded = Happening.objects.all()
300	        reloaded.query = pickle.loads(pickle.dumps(qs.query))
301	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:316
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
315	                reloaded = Happening.objects.all()
316	                reloaded.query = pickle.loads(pickle.dumps(qs.query))
317	                self.assertEqual(reloaded.get(), {"name": "test"})

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:333
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
332	        with self.assertRaisesMessage(RuntimeWarning, msg):
333	            pickle.loads(pickle.dumps(qs))
334	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:346
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
345	        with self.assertRaisesMessage(RuntimeWarning, msg):
346	            pickle.loads(pickle.dumps(qs))
347	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:373
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
372	        with self.assertNumQueries(0):
373	            reloaded = pickle.loads(dumped)
374	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/queryset_pickle/tests.py:386
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
385	        with self.assertNumQueries(0):
386	            reloaded = pickle.loads(dumped)
387	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/raw_query/models.py:15
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
14	        for k in kwargs:
15	            assert k in [f.attname for f in self._meta.fields], (
16	                "Author.__init__ got an unexpected parameter: %s" % k
17	            )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with subprocess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/runtests.py:10
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
9	import socket
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/runtests.py:191
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
190	            if not start_at:
191	                assert start_after
192	                # Skip the current one before starting.
193	                continue

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/runtests.py:481
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
480	        print("***** Test labels: %s" % " ".join(test_labels_a))
481	        failures_a = subprocess.run(subprocess_args + test_labels_a)
482	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/runtests.py:486
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
485	        print("")
486	        failures_b = subprocess.run(subprocess_args + test_labels_b)
487	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   Location: ./django/tests/runtests.py:528
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
527	        )
528	        failures = subprocess.call(subprocess_args + [label, paired_test])
529	        if failures:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/select_related/tests.py:28
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
27	        models = [Domain, Kingdom, Phylum, Klass, Order, Family, Genus, Species]
28	        assert len(names) == len(models), (names, models)
29	
30	        parent = None

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/serializers/test_xml.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
1	from xml.dom import minidom
2	
3	from django.core import serializers
4	from django.core.serializers.xml_serializer import DTDForbidden

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/serializers/test_xml.py:36
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
35	        try:
36	            minidom.parseString(serial_str)
37	        except Exception:

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/serializers/test_xml.py:45
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
44	        ret_list = []
45	        dom = minidom.parseString(serial_str)
46	        fields = dom.getElementsByTagName("object")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/serializers/test_xml.py:54
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
53	        ret_list = []
54	        dom = minidom.parseString(serial_str)
55	        fields = dom.getElementsByTagName("field")

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/servers/tests.py:43
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
42	    def urlopen(self, url):
43	        return urlopen(self.live_server_url + url)
44	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/servers/views.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
38	def subview_calling_view(request):
39	    with urlopen(request.GET["url"] + "/subview/") as response:
40	        return HttpResponse("subview calling view: {}".format(response.read().decode()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/servers/views.py:44
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
43	def check_model_instance_from_subview(request):
44	    with urlopen(request.GET["url"] + "/create_model_instance/"):
45	        pass

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/servers/views.py:46
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
45	        pass
46	    with urlopen(request.GET["url"] + "/model_view/") as response:
47	        return HttpResponse("subview calling view: {}".format(response.read().decode()))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   Location: ./django/tests/settings_tests/tests.py:298
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
297	
298	    @override_settings(SECRET_KEY="")
299	    def test_no_secret_key(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/settings_tests/tests.py:419
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
418	        s = LazySettings()
419	        s.configure(SECRET_KEY="foo")
420	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'BOTH'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/settings_tests/tests.py:558
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
557	        with self.assertRaises(SettingChangeEnterException):
558	            with override_settings(SETTING_PASS="BOTH", SETTING_BOTH="BOTH"):
559	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'ENTER'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/settings_tests/tests.py:568
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
567	        with self.assertRaises(SettingChangeEnterException):
568	            with override_settings(SETTING_PASS="ENTER", SETTING_ENTER="ENTER"):
569	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'EXIT'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/settings_tests/tests.py:578
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
577	        with self.assertRaises(SettingChangeExitException):
578	            with override_settings(SETTING_PASS="EXIT", SETTING_EXIT="EXIT"):
579	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/signing/tests.py:196
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
195	
196	    @override_settings(
197	        SECRET_KEY="secret",
198	        SECRET_KEY_FALLBACKS=["oldsecret"],
199	    )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/signing/tests.py:207
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
206	
207	    @override_settings(
208	        SECRET_KEY="secret",
209	        SECRET_KEY_FALLBACKS=["oldsecret"],
210	    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: ./django/tests/staticfiles_tests/cases.py:95
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
94	    def _get_file(self, filepath):
95	        assert filepath, "filepath is empty."
96	        filepath = os.path.join(settings.STATIC_ROOT, filepath)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/staticfiles_tests/test_liveserver.py:68
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
67	    def urlopen(self, url):
68	        return urlopen(self.live_server_url + url)
69	

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
1	import datetime
2	from xml.dom import minidom
3	
4	from django.contrib.sites.models import Site

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:99
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
98	        response = self.client.get("/syndication/rss2/")
99	        doc = minidom.parseString(response.content)
100	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:205
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
204	        response = self.client.get("/syndication/rss2/with-callable-object/")
205	        doc = minidom.parseString(response.content)
206	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:211
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
210	        response = self.client.get("/syndication/rss2/with-decorated-methods/")
211	        doc = minidom.parseString(response.content)
212	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:248
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
247	        response = self.client.get("/syndication/rss2/guid_ispermalink_false/")
248	        doc = minidom.parseString(response.content)
249	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:265
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
264	        response = self.client.get("/syndication/rss2/guid_ispermalink_true/")
265	        doc = minidom.parseString(response.content)
266	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:278
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
277	        response = self.client.get("/syndication/rss2/single-enclosure/")
278	        doc = minidom.parseString(response.content)
279	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:298
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
297	        response = self.client.get("/syndication/rss091/")
298	        doc = minidom.parseString(response.content)
299	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:363
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
362	        response = self.client.get("/syndication/atom/")
363	        feed = minidom.parseString(response.content).firstChild
364	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:413
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
412	        response = self.client.get("/syndication/atom/")
413	        feed = minidom.parseString(response.content).firstChild
414	        entries = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:423
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
422	        response = self.client.get("/syndication/atom/single-enclosure/")
423	        feed = minidom.parseString(response.content).firstChild
424	        items = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:432
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
431	        response = self.client.get("/syndication/atom/multiple-enclosure/")
432	        feed = minidom.parseString(response.content).firstChild
433	        items = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:446
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
445	        response = self.client.get("/syndication/atom/")
446	        feed = minidom.parseString(response.content).firstChild
447	        updated = feed.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:456
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
455	        response = self.client.get("/syndication/latest/")
456	        feed = minidom.parseString(response.content).firstChild
457	        updated = feed.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:466
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
465	        response = self.client.get("/syndication/custom/")
466	        feed = minidom.parseString(response.content).firstChild
467	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:510
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
509	        response = self.client.get("/syndication/language/")
510	        feed = minidom.parseString(response.content).firstChild
511	        self.assertEqual(

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:521
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
520	        response = self.client.get("/syndication/rss2/")
521	        doc = minidom.parseString(response.content)
522	        for item in doc.getElementsByTagName("item"):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:535
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
534	        response = self.client.get("/syndication/naive-dates/")
535	        doc = minidom.parseString(response.content)
536	        updated = doc.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:548
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
547	        response = self.client.get("/syndication/aware-dates/")
548	        doc = minidom.parseString(response.content)
549	        published = doc.getElementsByTagName("published")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:640
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
639	        response = self.client.get("/syndication/stylesheet/")
640	        doc = minidom.parseString(response.content)
641	        self.assertEqual(doc.childNodes[0].nodeName, "xml-stylesheet")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:715
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
714	        response = self.client.get("/syndication/feedurl/")
715	        doc = minidom.parseString(response.content)
716	        for link in doc.getElementsByTagName("link"):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:732
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
731	        )
732	        doc = minidom.parseString(response.content)
733	        chan = doc.getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:760
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
759	        response = self.client.get("/syndication/template/")
760	        doc = minidom.parseString(response.content)
761	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:780
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
779	        response = self.client.get("/syndication/template_context/")
780	        doc = minidom.parseString(response.content)
781	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/syndication_tests/tests.py:826
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
825	        response = self.client.get("/syndication/rss2/articles/%s/" % self.e1.pk)
826	        doc = minidom.parseString(response.content)
827	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_addslashes.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "addslashes01", {"a": "<a>'", "b": mark_safe("<a>'")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_addslashes.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "addslashes02", {"a": "<a>'", "b": mark_safe("<a>'")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_capfirst.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "capfirst01", {"a": "fred>", "b": mark_safe("fred&gt;")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_capfirst.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "capfirst02", {"a": "fred>", "b": mark_safe("fred&gt;")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_center.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "center01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_center.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "center02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_chaining.py:15
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
14	        output = self.engine.render_to_string(
15	            "chaining01", {"a": "a < b", "b": mark_safe("a < b")}
16	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_chaining.py:29
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
28	        output = self.engine.render_to_string(
29	            "chaining02", {"a": "a < b", "b": mark_safe("a < b")}
30	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_chaining.py:37
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
36	        output = self.engine.render_to_string(
37	            "chaining03", {"a": "a < b", "b": mark_safe("a < b")}
38	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_chaining.py:51
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
50	        output = self.engine.render_to_string(
51	            "chaining04", {"a": "a < b", "b": mark_safe("a < b")}
52	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:18
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
17	        output = self.engine.render_to_string(
18	            "cut01", {"a": "x&y", "b": mark_safe("x&amp;y")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:25
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
24	        output = self.engine.render_to_string(
25	            "cut02", {"a": "x&y", "b": mark_safe("x&amp;y")}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:38
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
37	        output = self.engine.render_to_string(
38	            "cut03", {"a": "x&y", "b": mark_safe("x&amp;y")}
39	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:45
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
44	        output = self.engine.render_to_string(
45	            "cut04", {"a": "x&y", "b": mark_safe("x&amp;y")}
46	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:60
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
59	        output = self.engine.render_to_string(
60	            "cut05", {"a": "x&y", "b": mark_safe("x&amp;y")}
61	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_cut.py:67
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
66	        output = self.engine.render_to_string(
67	            "cut06", {"a": "x&y", "b": mark_safe("x&amp;y")}
68	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_default.py:29
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
28	    def test_default03(self):
29	        output = self.engine.render_to_string("default03", {"a": mark_safe("x>")})
30	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_default.py:34
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
33	    def test_default04(self):
34	        output = self.engine.render_to_string("default04", {"a": mark_safe("x>")})
35	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escape.py:18
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
17	        output = self.engine.render_to_string(
18	            "escape01", {"a": "x&y", "b": mark_safe("x&y")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escape.py:31
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
30	        output = self.engine.render_to_string(
31	            "escape02", {"a": "x&y", "b": mark_safe("x&y")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escapeseq.py:23
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
22	            "escapeseq_basic",
23	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escapeseq.py:23
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
22	            "escapeseq_basic",
23	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escapeseq.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
38	            "escapeseq_autoescape_off",
39	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
40	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_escapeseq.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
38	            "escapeseq_autoescape_off",
39	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
40	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_first.py:12
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
11	        output = self.engine.render_to_string(
12	            "first01", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_first.py:25
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
24	        output = self.engine.render_to_string(
25	            "first02", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_floatformat.py:23
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
22	        output = self.engine.render_to_string(
23	            "floatformat01", {"a": "1.42", "b": mark_safe("1.42")}
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_floatformat.py:30
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
29	        output = self.engine.render_to_string(
30	            "floatformat02", {"a": "1.42", "b": mark_safe("1.42")}
31	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_iriencode.py:28
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
27	        output = self.engine.render_to_string(
28	            "iriencode03", {"url": mark_safe("?test=1&me=2")}
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_iriencode.py:37
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
36	        output = self.engine.render_to_string(
37	            "iriencode04", {"url": mark_safe("?test=1&me=2")}
38	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_join.py:40
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
39	        output = self.engine.render_to_string(
40	            "join06", {"a": ["alpha", "beta & me"], "var": mark_safe(" & ")}
41	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_join.py:54
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
53	        output = self.engine.render_to_string(
54	            "join08", {"a": ["Alpha", "Beta & me"], "var": mark_safe(" & ")}
55	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_last.py:11
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
10	        output = self.engine.render_to_string(
11	            "last01", {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_last.py:20
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
19	        output = self.engine.render_to_string(
20	            "last02", {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]}
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_length.py:34
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
33	        output = self.engine.render_to_string(
34	            "length05", {"string": mark_safe("django")}
35	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_length.py:55
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
54	    def test_safestring(self):
55	        self.assertEqual(length(mark_safe("1234")), 4)
56	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linebreaks.py:18
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
17	        output = self.engine.render_to_string(
18	            "linebreaks01", {"a": "x&\ny", "b": mark_safe("x&\ny")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linebreaks.py:32
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
31	        output = self.engine.render_to_string(
32	            "linebreaks02", {"a": "x&\ny", "b": mark_safe("x&\ny")}
33	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linebreaksbr.py:17
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
16	        output = self.engine.render_to_string(
17	            "linebreaksbr01", {"a": "x&\ny", "b": mark_safe("x&\ny")}
18	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linebreaksbr.py:31
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
30	        output = self.engine.render_to_string(
31	            "linebreaksbr02", {"a": "x&\ny", "b": mark_safe("x&\ny")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linenumbers.py:18
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
17	            "linenumbers01",
18	            {"a": "one\n<two>\nthree", "b": mark_safe("one\n&lt;two&gt;\nthree")},
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_linenumbers.py:35
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
34	            "linenumbers02",
35	            {"a": "one\n<two>\nthree", "b": mark_safe("one\n&lt;two&gt;\nthree")},
36	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_ljust.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "ljust01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_ljust.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "ljust02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_lower.py:18
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
17	        output = self.engine.render_to_string(
18	            "lower01", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_lower.py:25
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
24	        output = self.engine.render_to_string(
25	            "lower02", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_make_list.py:16
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
15	    def test_make_list01(self):
16	        output = self.engine.render_to_string("make_list01", {"a": mark_safe("&")})
17	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_make_list.py:21
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
20	    def test_make_list02(self):
21	        output = self.engine.render_to_string("make_list02", {"a": mark_safe("&")})
22	        self.assertEqual(output, "[&#x27;&amp;&#x27;]")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_make_list.py:33
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
32	    def test_make_list03(self):
33	        output = self.engine.render_to_string("make_list03", {"a": mark_safe("&")})
34	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_make_list.py:38
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
37	    def test_make_list04(self):
38	        output = self.engine.render_to_string("make_list04", {"a": mark_safe("&")})
39	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_phone2numeric.py:13
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
12	            "phone2numeric01",
13	            {"a": "<1-800-call-me>", "b": mark_safe("<1-800-call-me>")},
14	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_phone2numeric.py:28
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
27	            "phone2numeric02",
28	            {"a": "<1-800-call-me>", "b": mark_safe("<1-800-call-me>")},
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_random.py:11
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
10	        output = self.engine.render_to_string(
11	            "random01", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_random.py:11
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
10	        output = self.engine.render_to_string(
11	            "random01", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_random.py:24
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
23	        output = self.engine.render_to_string(
24	            "random02", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_random.py:24
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
23	        output = self.engine.render_to_string(
24	            "random02", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_rjust.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "rjust01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_rjust.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "rjust02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_slice.py:12
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
11	        output = self.engine.render_to_string(
12	            "slice01", {"a": "a&b", "b": mark_safe("a&b")}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_slice.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "slice02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_slugify.py:24
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
23	        output = self.engine.render_to_string(
24	            "slugify01", {"a": "a & b", "b": mark_safe("a &amp; b")}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_slugify.py:31
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
30	        output = self.engine.render_to_string(
31	            "slugify02", {"a": "a & b", "b": mark_safe("a &amp; b")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_stringformat.py:24
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
23	        output = self.engine.render_to_string(
24	            "stringformat01", {"a": "a<b", "b": mark_safe("a<b")}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_stringformat.py:33
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
32	        output = self.engine.render_to_string(
33	            "stringformat02", {"a": "a<b", "b": mark_safe("a<b")}
34	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_striptags.py:16
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
15	                "a": "<a>x</a> <p><b>y</b></p>",
16	                "b": mark_safe("<a>x</a> <p><b>y</b></p>"),
17	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_striptags.py:34
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
33	                "a": "<a>x</a> <p><b>y</b></p>",
34	                "b": mark_safe("<a>x</a> <p><b>y</b></p>"),
35	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_truncatewords.py:20
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
19	            "truncatewords01",
20	            {"a": "alpha & bravo", "b": mark_safe("alpha &amp; bravo")},
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_truncatewords.py:28
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
27	            "truncatewords02",
28	            {"a": "alpha & bravo", "b": mark_safe("alpha &amp; bravo")},
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_unordered_list.py:31
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
30	        output = self.engine.render_to_string(
31	            "unordered_list03", {"a": ["x>", [mark_safe("<y")]]}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_unordered_list.py:46
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
45	        output = self.engine.render_to_string(
46	            "unordered_list04", {"a": ["x>", [mark_safe("<y")]]}
47	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_upper.py:23
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
22	        output = self.engine.render_to_string(
23	            "upper01", {"a": "a & b", "b": mark_safe("a &amp; b")}
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_upper.py:30
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
29	        output = self.engine.render_to_string(
30	            "upper02", {"a": "a & b", "b": mark_safe("a &amp; b")}
31	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlize.py:22
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
21	                "a": "http://example.com/?x=&y=",
22	                "b": mark_safe("http://example.com?x=&amp;y=&lt;2&gt;"),
23	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlize.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
38	                "a": "http://example.com/?x=&y=",
39	                "b": mark_safe("http://example.com?x=&amp;y="),
40	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlize.py:52
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
51	    def test_urlize03(self):
52	        output = self.engine.render_to_string("urlize03", {"a": mark_safe("a &amp; b")})
53	        self.assertEqual(output, "a &amp; b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlize.py:57
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
56	    def test_urlize04(self):
57	        output = self.engine.render_to_string("urlize04", {"a": mark_safe("a &amp; b")})
58	        self.assertEqual(output, "a &amp; b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlizetrunc.py:22
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
21	                "a": '"Unsafe" http://example.com/x=&y=',
22	                "b": mark_safe("&quot;Safe&quot; http://example.com?x=&amp;y="),
23	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_urlizetrunc.py:39
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
38	                "a": '"Unsafe" http://example.com/x=&y=',
39	                "b": mark_safe("&quot;Safe&quot; http://example.com?x=&amp;y="),
40	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_wordcount.py:19
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
18	        output = self.engine.render_to_string(
19	            "wordcount01", {"a": "a & b", "b": mark_safe("a &amp; b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_wordcount.py:26
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
25	        output = self.engine.render_to_string(
26	            "wordcount02", {"a": "a & b", "b": mark_safe("a &amp; b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_wordwrap.py:20
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
19	        output = self.engine.render_to_string(
20	            "wordwrap01", {"a": "a & b", "b": mark_safe("a & b")}
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/filter_tests/test_wordwrap.py:27
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
26	        output = self.engine.render_to_string(
27	            "wordwrap02", {"a": "a & b", "b": mark_safe("a & b")}
28	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:202
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
201	    def test_i18n21(self):
202	        output = self.engine.render_to_string("i18n21", {"andrew": mark_safe("a & b")})
203	        self.assertEqual(output, "a & b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/syntax_tests/i18n/test_translate.py:82
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
81	    def test_i18n22(self):
82	        output = self.engine.render_to_string("i18n22", {"andrew": mark_safe("a & b")})
83	        self.assertEqual(output, "a & b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/syntax_tests/test_autoescape.py:53
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
52	        output = self.engine.render_to_string(
53	            "autoescape-tag06", {"first": mark_safe("<b>first</b>")}
54	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/syntax_tests/test_autoescape.py:60
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
59	        output = self.engine.render_to_string(
60	            "autoescape-tag07", {"first": mark_safe("<b>Apple</b>")}
61	        )

--------------------------------------------------
>> Issue: [B103:set_bad_file_permissions] Chmod setting a permissive mask 0o222 on file (tmppath).
   Severity: High   Confidence: High
   Location: ./django/tests/template_tests/test_loaders.py:224
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html
223	            tmppath = os.path.join(tmpdir, tmpfile.name)
224	            os.chmod(tmppath, 0o0222)
225	            with self.set_dirs([tmpdir]):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	import time
3	from datetime import datetime

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:188
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
187	        pickled_response = pickle.dumps(response)
188	        unpickled_response = pickle.loads(pickled_response)
189	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:220
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
219	        pickled_response = pickle.dumps(response)
220	        unpickled_response = pickle.loads(pickled_response)
221	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:236
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
235	        pickled_response = pickle.dumps(response, pickle.HIGHEST_PROTOCOL)
236	        unpickled_response = pickle.loads(pickled_response)
237	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:326
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
325	        pickled_response = pickle.dumps(response)
326	        unpickled_response = pickle.loads(pickled_response)
327	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/test_response.py:363
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
362	        pickled_response = pickle.dumps(response)
363	        unpickled_response = pickle.loads(pickled_response)
364	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/template_tests/utils.py:185
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
184	    def __str__(self):
185	        return mark_safe("you &gt; me")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:68
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
67	    def setUpTestData(cls):
68	        cls.u1 = User.objects.create_user(username="testclient", password="password")
69	        cls.u2 = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:69
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
68	        cls.u1 = User.objects.create_user(username="testclient", password="password")
69	        cls.u2 = User.objects.create_user(
70	            username="inactive", password="password", is_active=False
71	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:552
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
551	        # Log in
552	        login = self.client.login(username="testclient", password="password")
553	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:591
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
590	        # Log in
591	        login = self.client.login(username="testclient", password="password")
592	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:629
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
628	        # Log in
629	        login = self.client.login(username="testclient", password="password")
630	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'nopassword'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:660
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
659	
660	        login = self.client.login(username="otheruser", password="nopassword")
661	        self.assertFalse(login)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:703
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
702	        # Log in
703	        self.client.login(username="testclient", password="password")
704	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:804
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
803	        # Log in
804	        login = self.client.login(username="testclient", password="password")
805	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:826
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
825	        # Log in
826	        login = self.client.login(username="testclient", password="password")
827	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client/tests.py:843
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
842	        # Log in
843	        login = self.client.login(username="testclient", password="password")
844	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/test_client/views.py:3
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
2	from urllib.parse import urlencode
3	from xml.dom.minidom import parseString
4	
5	from django.contrib.auth.decorators import login_required, permission_required

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/test_client/views.py:139
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
138	    if request.method == "POST":
139	        root = parseString(request.body)
140	        first_book = root.firstChild.firstChild

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:32
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
31	    def setUpTestData(cls):
32	        cls.u1 = User.objects.create_user(username="testclient", password="password")
33	        cls.staff = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:33
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
32	        cls.u1 = User.objects.create_user(username="testclient", password="password")
33	        cls.staff = User.objects.create_user(
34	            username="staff", password="password", is_staff=True
35	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:695
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
694	        c = Client()
695	        login = c.login(username="testclient", password="password")
696	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:713
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
712	        "A session engine that modifies the session key can be used to log in"
713	        login = self.client.login(username="testclient", password="password")
714	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:756
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
755	
756	        login = self.client.login(username="testclient", password="password")
757	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:764
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
763	        # This next operation should be successful; if it isn't we have a problem.
764	        login = self.client.login(username="staff", password="password")
765	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:906
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
905	        # Log in
906	        login = self.client.login(username="testclient", password="password")
907	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:925
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
924	        self.client.logout()
925	        login = self.client.login(username="testclient", password="password")
926	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:940
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
939	        user_logged_out.connect(listener)
940	        self.client.login(username="testclient", password="password")
941	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:959
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
958	        user_logged_out.connect(listener)
959	        self.client.login(username="test@test.com", password="password")
960	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:983
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
982	        user_logged_out.connect(listener)
983	        self.client.login(username="test@test.com", password="password")
984	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:998
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
997	        user_logged_out.connect(listener)
998	        self.client.login(username="incorrect", password="password")
999	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:1014
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1013	        user_logged_in.connect(listener)
1014	        self.client.login(username="testclient", password="password")
1015	        user_logged_out.disconnect(listener)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/test_client_regress/tests.py:1028
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1027	        user_logged_in.connect(listener)
1028	        self.client.login(username="incorrect", password="password")
1029	        user_logged_in.disconnect(listener)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/test_runner/test_parallel.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	import sys
3	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/test_runner/test_parallel.py:159
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
158	        result = RemoteTestResult()
159	        loaded_result = pickle.loads(pickle.dumps(result))
160	        self.assertEqual(result.events, loaded_result.events)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/test_utils/test_testcase.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	from functools import wraps
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/test_utils/test_testcase.py:25
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
24	        self.non_picklable = lambda: 0
25	        self.assertEqual(self, pickle.loads(pickle.dumps(self)))
26	

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   Location: ./django/tests/timezones/tests.py:7
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom
6	from unittest import SkipTest, skipIf
7	from xml.dom.minidom import parseString
8	
9	from django.contrib.auth.models import User

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   Location: ./django/tests/timezones/tests.py:739
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom
738	    def assert_xml_contains_datetime(self, xml, dt):
739	        field = parseString(xml).getElementsByTagName("field")[0]
740	        self.assertXMLEqual(field.childNodes[0].wholeText, dt)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/timezones/tests.py:1337
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
1336	    def setUpTestData(cls):
1337	        cls.u1 = User.objects.create_user(
1338	            password="secret",
1339	            last_login=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1340	            is_superuser=True,
1341	            username="super",
1342	            first_name="Super",
1343	            last_name="User",
1344	            email="super@example.com",
1345	            is_staff=True,
1346	            is_active=True,
1347	            date_joined=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1348	        )

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/urlpatterns_reverse/tests.py:5
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
4	
5	import pickle
6	import sys

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   Location: ./django/tests/urlpatterns_reverse/tests.py:774
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html
773	    def test_user_permission_with_lazy_reverse(self):
774	        alfred = User.objects.create_user(
775	            "alfred", "alfred@example.com", password="testpw"
776	        )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with CompletedProcess module.
   Severity: Low   Confidence: High
   Location: ./django/tests/utils_tests/test_autoreload.py:15
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
14	from pathlib import Path
15	from subprocess import CompletedProcess
16	from unittest import mock, skip, skipIf

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_crypto.py:32
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5
31	                ("salt", "value"),
32	                {"secret": "x" * hashlib.sha1().block_size},
33	                "bd3749347b412b1b0a9ea65220e55767ac8e96b0",

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/utils_tests/test_datastructures.py:7
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
6	import copy
7	import pickle
8	
9	from django.test import SimpleTestCase

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_datastructures.py:143
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
142	        x = MultiValueDict({"a": ["1", "2"], "b": ["3"]})
143	        self.assertEqual(x, pickle.loads(pickle.dumps(x)))
144	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_html.py:64
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
63	                "< Dangerous >",
64	                mark_safe("<b>safe</b>"),
65	                third="< dangerous again",

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_html.py:66
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
65	                third="< dangerous again",
66	                fourth=mark_safe("<i>safe again</i>"),
67	            ),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_html.py:304
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
303	        self.assertEqual(conditional_escape(s), "&lt;h1&gt;interop&lt;/h1&gt;")
304	        self.assertEqual(conditional_escape(mark_safe(s)), s)
305	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_html.py:305
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
304	        self.assertEqual(conditional_escape(mark_safe(s)), s)
305	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)
306	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/utils_tests/test_lazyobject.py:2
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import copy
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_lazyobject.py:229
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
228	        pickled = pickle.dumps(obj)
229	        unpickled = pickle.loads(pickled)
230	        self.assertIsInstance(unpickled, Foo)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_lazyobject.py:485
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
484	                pickled = pickle.dumps(obj, protocol)
485	                unpickled = pickle.loads(pickled)
486	                self.assertEqual(unpickled, obj)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_lazyobject.py:503
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
502	                self.assertEqual(
503	                    pickle.loads(pickle.dumps(lazy_category, protocol)), category
504	                )

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_lazyobject.py:506
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
505	                self.assertEqual(
506	                    pickle.loads(pickle.dumps(lazy_category_2, protocol)), category
507	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:23
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
22	    def test_mark_safe(self):
23	        s = mark_safe("a&b")
24	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:32
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
31	        """
32	        s = mark_safe("a&b")
33	        self.assertIsInstance(str(s), type(s))

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:37
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
36	        e = customescape("<a&b>")
37	        s = mark_safe(e)
38	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:37
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
36	        e = customescape("<a&b>")
37	        s = mark_safe(e)
38	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:44
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
43	    def test_mark_safe_lazy(self):
44	        safe_s = mark_safe(lazystr("a&b"))
45	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:44
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
43	    def test_mark_safe_lazy(self):
44	        safe_s = mark_safe(lazystr("a&b"))
45	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:51
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
50	    def test_mark_safe_lazy_i18n(self):
51	        s = mark_safe(gettext_lazy("name"))
52	        tpl = Template("{{ s }}")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:51
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
50	    def test_mark_safe_lazy_i18n(self):
51	        s = mark_safe(gettext_lazy("name"))
52	        tpl = Template("{{ s }}")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:61
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
60	
61	        s = mark_safe(Obj())
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:61
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
60	
61	        s = mark_safe(Obj())
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:66
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
65	    def test_mark_safe_result_implements_dunder_html(self):
66	        self.assertEqual(mark_safe("a&b").__html__(), "a&b")
67	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:69
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
68	    def test_mark_safe_lazy_result_implements_dunder_html(self):
69	        self.assertEqual(mark_safe(lazystr("a&b")).__html__(), "a&b")
70	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:69
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
68	    def test_mark_safe_lazy_result_implements_dunder_html(self):
69	        self.assertEqual(mark_safe(lazystr("a&b")).__html__(), "a&b")
70	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:73
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
72	        s = html.escape(lazystr("a"))
73	        s += mark_safe("&b")
74	        self.assertRenderEqual("{{ s }}", "a&b", s=s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:77
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
76	        s = html.escapejs(lazystr("a"))
77	        s += mark_safe("&b")
78	        self.assertRenderEqual("{{ s }}", "a&b", s=s)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:89
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
88	
89	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
90	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:89
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
88	
89	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
90	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:100
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
99	
100	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
101	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:100
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
99	
100	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
101	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:111
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
110	        lazy_str = lazy(html_str, str)()
111	        self.assertEqual(mark_safe(lazy_str), html_str())
112	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:111
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
110	        lazy_str = lazy(html_str, str)()
111	        self.assertEqual(mark_safe(lazy_str), html_str())
112	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:147
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
146	            def __add__(self, other):
147	                return mark_safe(base_str) + other
148	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:147
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
146	            def __add__(self, other):
147	                return mark_safe(base_str) + other
148	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:155
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html
154	            def __radd__(self, other):
155	                return other + mark_safe(base_str)
156	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:155
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
154	            def __radd__(self, other):
155	                return other + mark_safe(base_str)
156	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:162
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
161	            (Add(), add_str, left_add_expected, str),
162	            (Add(), mark_safe(add_str), left_add_expected, str),
163	            (AddSafe(), add_str, left_add_expected, str),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:164
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
163	            (AddSafe(), add_str, left_add_expected, str),
164	            (AddSafe(), mark_safe(add_str), left_add_expected, SafeString),
165	            # Right-add test cases.

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:167
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
166	            (add_str, Radd(), right_add_expected, str),
167	            (mark_safe(add_str), Radd(), right_add_expected, str),
168	            (add_str, Radd(), right_add_expected, str),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/utils_tests/test_safestring.py:169
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
168	            (add_str, Radd(), right_add_expected, str),
169	            (mark_safe(add_str), RaddSafe(), right_add_expected, SafeString),
170	        ]

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/utils_tests/test_simplelazyobject.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	
3	from django.contrib.auth.models import User
4	from django.test import TestCase

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:1
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
1	import pickle
2	from unittest import TestCase
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:10
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
9	        original = ValidationError("a", code="something")
10	        unpickled = pickle.loads(pickle.dumps(original))
11	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:16
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
15	        original = ValidationError("a", code="something")
16	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
17	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:22
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
21	        original = ValidationError(["a", "b"])
22	        unpickled = pickle.loads(pickle.dumps(original))
23	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:31
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
30	        original = ValidationError(["a", "b"])
31	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
32	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:40
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
39	        original = ValidationError([ValidationError("a"), ValidationError("b")])
40	        unpickled = pickle.loads(pickle.dumps(original))
41	        self.assertIs(unpickled.args[0][0], unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   Location: ./django/tests/validation/test_picklable.py:51
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
50	        original = ValidationError(message_dict)
51	        unpickled = pickle.loads(pickle.dumps(original))
52	        self.assertEqual(unpickled.message_dict, message_dict)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:707
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
706	                err.add_note("Second Note")
707	                err.add_note(mark_safe("<script>alert(1);</script>"))
708	                raise err

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:770
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
769	            try:
770	                raise AttributeError(mark_safe("<p>Top level</p>"))
771	            except AttributeError as explicit:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:773
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
772	                try:
773	                    raise ValueError(mark_safe("<p>Second exception</p>")) from explicit
774	                except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:775
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
774	                except ValueError:
775	                    raise IndexError(mark_safe("<p>Final exception</p>"))
776	        except Exception:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:817
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
816	                try:
817	                    raise ValueError(mark_safe("<p>2nd exception</p>")) from explicit
818	                except ValueError:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:882
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
881	            code = compile(source, "generated", "exec")
882	            exec(code, namespace)
883	        except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:917
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
916	            code = compile(source, "generated", "exec")
917	            exec(code, namespace)
918	        except Exception:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:1049
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
1048	        try:
1049	            local = mark_safe("<p>Local variable</p>")
1050	            raise ValueError(local)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   Location: ./django/tests/view_tests/tests/test_debug.py:1103
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe
1102	        try:
1103	            mark_safe("abcdefghijkl<p>mnὀp</p>qrstuwxyz").encode("ascii")
1104	        except Exception:

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   Location: ./example.py:8
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
7	def execute_command(cmd):
8	    os.system(cmd)  # Vulnerabilidade (CWE-78)
9	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   Location: ./exampleVulnability.py:8
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
7	def execute_command(cmd):
8	    os.system(cmd)  # Vulnerabilidade (CWE-78)
9	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   Location: ./exampleVulnerability.py:8
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
7	def execute_command(cmd):
8	    os.system(cmd)  # Vulnerabilidade (CWE-78)
9	

--------------------------------------------------

Code scanned:
	Total lines of code: 397553
	Total lines skipped (#nosec): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0.0
		Low: 506.0
		Medium: 452.0
		High: 20.0
	Total issues (by confidence):
		Undefined: 0.0
		Low: 0.0
		Medium: 376.0
		High: 602.0
Files skipped (1):
	./django/tests/test_runner_apps/tagged/tests_syntax_error.py (syntax error while parsing AST from file)
